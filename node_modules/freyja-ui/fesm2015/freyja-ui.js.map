{"version":3,"file":"freyja-ui.js.map","sources":["ng://freyja-ui/lib/freyja.service.ts","ng://freyja-ui/lib/freyja.component.ts","ng://freyja-ui/lib/freyja.module.ts","ng://freyja-ui/lib/shared/base.component.ts","ng://freyja-ui/lib/shared/icon-base.component.ts","ng://freyja-ui/lib/button/button.component.ts","ng://freyja-ui/lib/icon/icon.component.ts","ng://freyja-ui/lib/icon/icon.module.ts","ng://freyja-ui/lib/button/button.module.ts","ng://freyja-ui/lib/checkbox/checkbox.component.ts","ng://freyja-ui/lib/checkbox/checkbox.module.ts","ng://freyja-ui/lib/radio-button/radio-button.component.ts","ng://freyja-ui/lib/radio-button/radio-button.module.ts","ng://freyja-ui/lib/checkbox-grid/checkbox-grid.component.ts","ng://freyja-ui/lib/checkbox-grid/checkbox-grid.module.ts","ng://freyja-ui/lib/number-input/number-input.component.ts","ng://freyja-ui/lib/number-input/number-input.module.ts","ng://freyja-ui/lib/text-input/text-input.component.ts","ng://freyja-ui/lib/text-input/text-input.module.ts","ng://freyja-ui/lib/svg-icon/icon-registry.service.ts","ng://freyja-ui/lib/svg-icon/svg-icon.component.ts","ng://freyja-ui/lib/svg-icon/svg-icon.module.ts","ng://freyja-ui/lib/accordion/accordion.component.ts","ng://freyja-ui/lib/accordion/accordion.module.ts","ng://freyja-ui/lib/content-switcher/content-switcher.component.ts","ng://freyja-ui/lib/content-switcher/content-switcher.module.ts","ng://freyja-ui/lib/light-box/light-box.component.ts","ng://freyja-ui/lib/card-item/card-item.component.ts","ng://freyja-ui/lib/native-dropdown/native-dropdown.component.ts","ng://freyja-ui/lib/native-dropdown/native-dropdown.module.ts","ng://freyja-ui/lib/light-box/light-box.module.ts","ng://freyja-ui/lib/card-item/card-item.module.ts","ng://freyja-ui/lib/modal/modal.component.ts","ng://freyja-ui/lib/modal/modal.module.ts","ng://freyja-ui/lib/drag-and-drop/drag-and-drop.component.ts","ng://freyja-ui/lib/drag-and-drop/drag-and-drop.module.ts","ng://freyja-ui/lib/date-picker/date-picker.component.ts","ng://freyja-ui/lib/date-picker/date-picker.service.ts","ng://freyja-ui/lib/date-picker/date-picker.module.ts","ng://freyja-ui/public_api.ts","ng://freyja-ui/freyja-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FreyjaService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fj-freyja',\n  template: `\n    <p>\n      freyja works!\n    </p>\n  `,\n  styles: []\n})\nexport class FreyjaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FreyjaComponent } from './freyja.component';\n\n@NgModule({\n  declarations: [FreyjaComponent],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [FreyjaComponent]\n})\nexport class FreyjaModule { }\n","// Angular Imports\nimport { Input } from '@angular/core';\n\n/**\n * @description Common set of inputs and methods to be used in all Freyja Components\n */\nexport class BaseComponent {\n  public _disabled = false;\n\n  /**\n   * custom styles object for the button\n   */\n  @Input() customStyles;\n  /**\n   * Name input, commonly used to identify form value\n   */\n  @Input() name: string;\n\n  /**\n   * Custom Margin for component\n   */\n  @Input() margin: string;\n  /**\n   * If component will be disabled, setter/getter to support approach like below\n   * <fj-comp disabled></fj-comp>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(v: boolean) {\n    this._disabled = this.coerceBooleanInput(v);\n  }\n  /**\n   * If component will take full width of it's container\n   */\n  @Input() fullWidth = false;\n\n  /**\n   * label to be used in text input etc\n   */\n  @Input() label: string;\n\n  /**\n   * label position, if it will appear before or after content\n   */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /**\n   * Size can be micro, small, medium or large\n   */\n  @Input() size: 'micro' | 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Placeholder for HTML input elements\n   */\n  @Input() placeholder = '';\n\n  /**\n   * if component value is required in a form\n   */\n  @Input() required = false;\n\n  /**\n   * TabIndex of the component\n   */\n  @Input() tabIndex: number;\n\n  /**\n   * aria-label attribute of the host element\n   */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * aria-labelledby attribute for element, usually used in input element\n   */\n\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /**\n   * Input attribute for Accessibility\n   */\n  @Input('aria-describedby') ariaDescribedby: string;\n\n\n\n  public style: object | string;\n  public class: string;\n\n  /**\n   * @description coerce an inout value into boolean\n   * @param val an input value which will be coearced into a boolean value\n   */\n  coerceBooleanInput(val: any): boolean {\n    return !!val || val === '';\n  }\n}\n","// Angular Imports\nimport { Input } from '@angular/core';\n\n// Internal Imports\nimport { COLORS } from './constants';\nimport { BaseComponent } from './base.component';\n\n/**\n * Base Icon component it will be used in Icon Component and Button Component\n */\nexport class IconBaseComponent extends BaseComponent {\n  /**\n   * Icon input represents name of icon, it can be svg icon\n   */\n  @Input() icon: string;\n  /**\n   * Icon Margin from from it's parent\n   */\n  @Input() iconMargin: string;\n  /**\n   * Fill Color of icon, you can customize it as per your needs\n   */\n  @Input() iconFill = 'white';\n  /**\n   * When used in conjuction with label or anyother content, position of icon\n   */\n  @Input() iconPosition: 'after' | 'before' = 'before';\n}\n","// Angular imports\nimport { Component, Input, OnInit } from '@angular/core';\n\n// Internal imports\nimport { IconBaseComponent } from '../shared/icon-base.component';\nimport { COLORS } from '../shared/constants';\n\n/**\n * Freyja Button Component using Freyja Design specifics\n * it extends properties of icon base component\n */\nlet nextId = 0;\n\n@Component({\n  selector: 'fj-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent extends IconBaseComponent implements OnInit {\n\n  /** Determin if button is ghost or not, and add relevant css classes */\n  @Input() ghost = false;\n  /**\n   * Button type, it can be button, submit or reset\n   */\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\n  /**\n   * Will determin look and feel of button\n   */\n  @Input() color: 'danger' | 'light' | 'primary' = 'primary';\n\n  /**\n   * Shape of button, it can be rounder, square or radius\n   */\n  @Input() shape: 'radius' | 'square' | 'rounded' = 'radius';\n\n  /**\n   * Provide unique to be used for button\n   */\n  @Input() id = `fj-button-${++nextId}`;\n\n\n  // TODO: add generic generateClass methods\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @description Perform operations which needs to be done after component is initialized\n   */\n  ngOnInit(): void {\n    if (this.ghost) {\n      this.iconFill = 'blue';\n    }\n  }\n  /**\n   * @description Add css classes based on inputs like size, shape etc\n   */\n  public generateClassList() {\n    const baseCls = 'fj-button--';\n    const classes = {\n      [baseCls + this.color]: this.color,\n      [baseCls + this.size]: this.size,\n      [baseCls + this.shape]: this.shape,\n      [baseCls + 'full-width']: this.fullWidth,\n      [`${baseCls}icon-before`]: this.iconPosition === 'before',\n      [`${baseCls}ghost`]: this.ghost\n    };\n    return classes;\n  }\n  /**\n   * generate custom styles\n   */\n  public generateStyles() {\n    return {...this.customStyles, margin: this.margin};\n  }\n\n  /**\n   * function that it is triggered when the mouse pointer enters the button\n   */\n  onMouseEnter() {\n    if (this.ghost) {\n      this.iconFill = 'white';\n    }\n  }\n\n  /**\n   * function that it is triggered when the mouse pointer leaves the button\n   */\n  onMouseLeave() {\n    if (this.ghost) {\n      this.iconFill = 'blue';\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { BaseComponent } from '../shared/base.component';\n\n@Component({\n  selector: 'fj-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\n\nexport class IconComponent extends BaseComponent implements OnChanges, OnInit {\n  @Input() iconClass = '';\n  @Input() svgName: string;\n  @Input() width: number;\n  @Input() fillColor = 'white';\n  @Input() strokeColor: string;\n  @Input() display = 'inline-flex';\n  @Input() opacity = 1;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.margin = '0';\n    this.style = {\n      'width': this.width,\n      'height': 'auto',\n      'opacity': this.opacity,\n      'display': this.display,\n      'margin': this.margin,\n    };\n  }\n  ngOnChanges() {\n    this.generateClass();\n  }\n\n  /**\n   * @description Generates the class for the icon\n   */\n  public generateClass() {\n    this.class = `${this.iconClass} `\n      + `${this.size ? 'icon--size--' + this.size : ''} `\n      + `${this.fillColor ? 'icon--fill--' + this.fillColor : ''} `\n      + `${this.strokeColor ? 'icon--stroke--' + this.strokeColor : ''}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {IconComponent} from '../icon/icon.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [IconComponent],\n  exports: [IconComponent]\n})\nexport class IconModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IconModule\n  ],\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent]\n})\nexport class FjButtonModule { }\n","// Angular Imports\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n// Internal Imports\nimport { BaseComponent } from '../shared/base.component';\n\n/**\n * Count for Next Id\n */\nlet nextId = 0;\n\n/**\n * Freyja CheckBox Component according to specifics of Freyja Design\n */\n@Component({\n  selector: 'fj-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseComponent {\n\n  // This is to make component controlled\n  private checkedVal = false;\n  private indeterminateVal = false;\n\n  /**\n   * Provide unique ID or it will use auto generated from counter\n   */\n  @Input() id = `fj-checkbox-${++nextId}`;\n  /**\n   * will determine indeterminate state of checkbox\n   */\n  @Input()\n  get indeterminate(): boolean {\n    return this.indeterminateVal;\n  }\n  set indeterminate(val: boolean) {\n    this.indeterminateVal = this.coerceBooleanInput(val);\n  }\n\n  /**\n   * on change event, will be emitted once user clicks on checkbox to change value\n   */\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Will determin initial checked state of checkbox\n   */\n  @Input()\n  get checked(): boolean {\n    return this.checkedVal;\n  }\n  set checked(v: boolean) {\n    if (v !== this.checkedVal) {\n      this.checkedVal = this.coerceBooleanInput(v);\n    }\n  }\n\n  constructor() {\n    super();\n  }\n  /**\n   * capture on click and toggle state of checkbox\n   * @param event emitted by html element on click\n   */\n  onCheckboxClicked(event: Event) {\n    event.stopPropagation();\n    this.toggle();\n  }\n\n  /**\n   * stop event propagation by capturing it\n   * @param event html event\n   */\n  onChangeEvent(event: Event) {\n    event.stopPropagation();\n  }\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const base = 'fj-checkbox--';\n    const classes = {\n      [`${base}label-before`]: this.labelPosition === 'before',\n      [`${base}disabled`]: this.disabled,\n      [`${base}indeterminate`]: this.indeterminate\n    };\n    return classes;\n  }\n\n  /**\n   * Toggle state of checked value and emit on change\n   */\n  public toggle() {\n    this.checked = !this.checked;\n    this.change.emit(this.checkedVal);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  declarations: [CheckboxComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CheckboxComponent\n  ]\n})\nexport class FjCheckboxModule { }\n","// Angular Imports\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\n\n// Internal Imports\nimport { BaseComponent } from '../shared/base.component';\n\n/**\n * Count for Next Id\n */\nlet nextId = 0;\n\n\n/**\n * Freyja Radio Button Component according to specifics of Freyja of Freyja Design\n */\n@Component({\n  selector: 'fj-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss'],\n})\nexport class RadioButtonComponent extends BaseComponent {\n\n  // This is to make component controlled\n  private checkedValue = false;\n  private uniqueInputId = `fj-radio-button-${++nextId}`;\n\n  /**\n   * Provide unique ID or it will use auto generated from counter\n   */\n  @Input() id = `fj-radio-button-${++nextId}`;\n\n  /**\n   * Value to be attached to radio button\n   */\n  @Input() value: any;\n\n\n  /**\n   * on change event, will be emitted once user clicks on radio button to change value\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Will determin initial checked state of radio button\n   */\n  @Input()\n  get checked(): boolean {\n    return this.checkedValue;\n  }\n  set checked(v: boolean) {\n    if (v !== this.checkedValue) {\n      this.checkedValue = this.coerceBooleanInput(v);\n      this.change.emit(this.checkedValue);\n    }\n  }\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const base = 'fj-radio-btn--';\n    const classes = {\n      [`${base}label-before`]: this.labelPosition === 'before',\n      [`${base}disabled`]: this.disabled\n    };\n    return classes;\n  }\n\n  /**\n   * capture on click and toggle state of radio button\n   * @param event emitted by html element on click\n   */\n  onRadioButtonClicked(event: Event) {\n    event.stopPropagation();\n    this.toggle();\n  }\n\n  onChangeEvent(event: Event) {\n    event.stopPropagation();\n  }\n\n  /**\n   * Toggle state of checked value and emit on change\n   */\n  public toggle() {\n    this.checked = !this.checked;\n    this.change.emit(this.checkedValue);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RadioButtonComponent } from './radio-button.component';\n\n@NgModule({\n  declarations: [RadioButtonComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [RadioButtonComponent]\n})\nexport class FjRadioButtonModule { }\n","import { Component, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'fj-checkbox-grid',\n  templateUrl: './checkbox-grid.component.html',\n  styleUrls: ['./checkbox-grid.component.scss']\n})\nexport class CheckboxGridComponent implements OnChanges {\n\n  @Input() title: string;\n  @Input() checkboxGroup: any[];\n  @Input() inline = true;\n  @Input() noPadding = false;\n  @Input() noMargin = false;\n  @Input() smallText = false;\n  @Input() noBorder: boolean;\n  @Input() formGroup: FormGroup;\n  @Output() checkboxClicked = new EventEmitter();\n\n  /**\n   * @description Internally used checkbox data\n   */\n  public checkboxes: any[];\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.makeCheckboxes();\n  }\n\n  /**\n   * @description Create the internally used array of checkboxes\n   */\n  private makeCheckboxes(): void {\n    if (this.checkboxGroup) {\n      this.checkboxes = this.checkboxGroup.map((item, index) => {\n        return {\n          index: index,\n          id: `${item.value}_${index}`,\n          label: item.label,\n          value: item.value,\n          checked: item.checked || false,\n        };\n      });\n    }\n  }\n\n  /**\n   * @description Notify the parent that a value has changed\n   * @param checked the new checked value of the checkbox\n   * @param item the internal checkbox model\n   */\n  public updateChecked(checked, item): void {\n    if (item.disabled) {\n      return;\n    }\n    item.checked = checked;\n    const toggledItem = this.checkboxGroup[item.index];\n    if (toggledItem.hasOwnProperty('checked')) {\n      toggledItem.checked = item.checked;\n    }\n    this.checkboxClicked.emit(toggledItem);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxGridComponent } from '../checkbox-grid/checkbox-grid.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    CheckboxGridComponent\n  ],\n  exports: [CheckboxGridComponent]\n})\nexport class CheckboxGridModule { }\n","// Angular Imports\nimport { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\n\n// Internal Imports\nimport { BaseComponent} from '../shared/base.component';\n\n/**\n * Count for Next Id\n */\nlet nextId = 0;\n\n\n/**\n * Freyja Number Input Component according to specifics of Freyja Design\n */\n@Component({\n  selector: 'fj-number-input',\n  templateUrl: './number-input.component.html',\n  styleUrls: ['./number-input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NumberInputComponent extends BaseComponent {\n\n  // This is to make component controlled\n  private inputValue = '';\n\n  /**\n   * Provide unique ID or it will use auto generated from counter\n   */\n  @Input() id = `fj-number-input-${++nextId}`;\n\n  /**\n   * Provide value to be displayed in input\n   */\n  @Input() value: string;\n\n  /**\n   * Allow applying forceful error state of input\n   */\n  @Input() errored = false;\n\n  /**\n   * On change event hook, which will be emitted on value change\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {\n    super();\n   }\n\n   /**\n    * Capture value change ang emit on change event callback\n    * @param event HTML onChange Event\n    */\n  onValueChange(event: Event) {\n    event.stopPropagation();\n    this.inputValue = (<HTMLInputElement>event.target).value;\n    this.change.emit(this.inputValue);\n  }\n\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const classes = {\n      ['fj-number-input--' + this.size]: this.size,\n      ['fj-number-input--error']: this.errored,\n    };\n    return classes;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NumberInputComponent } from './number-input.component';\n\n@NgModule({\n  declarations: [NumberInputComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NumberInputComponent\n  ]\n})\nexport class FjNumberInputModule { }\n","// Angular Imports\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\n// Internal Imports\nimport { BaseComponent } from '../shared/base.component';\nimport {FormGroup} from '@angular/forms';\n\n/**\n * Count for Next Id\n */\nlet nextId = 0;\n\n/**\n * Freyja Text Input Component according to specifics of Freyja Design\n */\n@Component({\n  selector: 'fj-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent extends BaseComponent  implements OnChanges {\n\n  /**\n   * Represent Internal state of component\n   */\n  private isErrored = false;\n\n  // This is to make component controlled\n  private inputValue = '';\n\n  /**\n   * Unique ID for HTMl Element identifier\n   */\n  @Input() id = `fj-text-input-${++nextId}`;\n\n  /**\n   * custom styles object for the input\n   */\n  @Input() customStyles;\n\n  /**\n   * Input value to be displayed\n   */\n  @Input() value: string;\n\n  /**\n   * type of the input, default type is text\n   */\n  @Input() type = 'text';\n\n  /**\n   * To Apply forceful error state to input component\n   */\n  @Input() errored = false;\n\n  /**\n   * checkes if the element should be focused by default\n   */\n  @Input() focused = false;\n  /**\n   * Error Message to be displayed\n   */\n  @Input() error: string;\n  /**\n   * Callback for value change\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * Callback for focus event\n   */\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * Callback for click event\n   */\n  @Output() click: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * Callback for mouseout event\n   */\n  @Output() mouseout: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * reactive form control name\n   */\n  @Input() controlName: string;\n  /**\n   * reactive form group\n   */\n  @Input() formGroup: FormGroup;\n\n  constructor() {\n    super();\n  }\n\n\n  ngOnChanges() {\n    if (this.focused) {\n      document.getElementById(this.id).focus();\n    }\n  }\n\n  /**\n    * Capture value change ang emit on change event callback\n    * @param event HTML onChange Event\n    */\n  onValueChange(event: Event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.inputValue = (<HTMLInputElement>event.target).value;\n    this.change.emit(this.inputValue);\n  }\n\n  /**\n   * triggers on focus event\n   * @param event HTML onFocus Event\n   */\n  onFocus(event: Event) {\n    event.stopPropagation();\n    this.focus.emit(this.inputValue);\n  }\n\n  /**\n   * triggers on click event\n   * @param event HTML click Event\n   */\n  onClick(event: Event) {\n    event.stopPropagation();\n    this.click.emit(this.inputValue);\n  }\n\n  /**\n   * Capture value change ang emit on mouseout event callback\n   * @param event HTML onChange Event\n   */\n  onMouseOut(event: Event) {\n    event.stopPropagation();\n    this.inputValue = (<HTMLInputElement>event.target).value;\n    this.mouseout.emit(this.inputValue);\n  }\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const classes = {\n      ['fj-input--' + this.size]: this.size,\n      ['fj-input--required']: this.required,\n      ['fj-input--error']: this.errored || this.error,\n    };\n    return classes;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputComponent } from './text-input.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [TextInputComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    TextInputComponent\n  ]\n})\nexport class FjTextInputModule { }\n","import { Injectable, Optional, Inject, SecurityContext } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { catchError, finalize, map, share, tap } from 'rxjs/operators';\n\nconst CLOUD_CDN_URL = 'https://storage.googleapis.com/svgicons';\n\nclass SvgIcon {\n  url: SafeResourceUrl | null;\n  svgElement: SVGElement | null;\n\n  constructor(data: SafeResourceUrl | SVGElement) {\n    if (!!(data as any).nodeName) {\n      this.svgElement = data as SVGElement;\n    } else {\n      this.url = data as SafeResourceUrl;\n    }\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconRegistryService {\n\n  private svgIcons = new Map<string, SvgIcon>();\n\n  private inProgressUrlFetches = new Map<string, Observable<string>>();\n\n  constructor(\n    @Optional() private httpClient: HttpClient,\n    private sanitizer: DomSanitizer) {\n  }\n\n  private loadSvgIconFromConfig(config: SvgIcon): Observable<SVGElement> {\n    return this.fetchUrl(config.url)\n      .pipe(map(svgText => this.createSvgElementForSingleIcon(svgText)));\n  }\n  private createSvgElementForSingleIcon(responseText: string): SVGElement {\n    const svg = this.svgElementFromString(responseText);\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false');\n    return svg;\n  }\n\n  private svgElementFromString(str: string): SVGElement {\n    const div = document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n\n    if (!svg) {\n      throw Error('<svg> tag not found');\n    }\n\n    return svg;\n  }\n\n  private fetchUrl(safeUrl: SafeResourceUrl | null): Observable<string> {\n\n    const url = this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    const inProgressFetch = this.inProgressUrlFetches.get(url);\n\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n    const req = this.httpClient.get(url, {\n      responseType: 'text', headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*'\n      })\n    }).pipe(\n      finalize(() => this.inProgressUrlFetches.delete(url)),\n      share(),\n    );\n\n    this.inProgressUrlFetches.set(url, req);\n    return req;\n  }\n\n  addSvgIcon(iconName: string): Observable<SVGElement>  {\n    const url = this.sanitizer.bypassSecurityTrustResourceUrl(`${CLOUD_CDN_URL}/${iconName}.svg`);\n    this.svgIcons.set(iconName, new SvgIcon(url));\n\n    return this.getNamedSvgIcon(iconName);\n  }\n\n  getNamedSvgIcon(name: string): Observable<SVGElement> {\n    const config = this.svgIcons.get(name);\n\n    if (config) {\n      if (config.svgElement) {\n        return observableOf(cloneSvg(config.svgElement));\n      } else {\n        return this.loadSvgIconFromConfig(config).pipe(\n          tap(svg => config.svgElement = svg),\n          map(svg => cloneSvg(svg)),\n        );\n      }\n    }\n  }\n}\n\nfunction cloneSvg(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n","// Angular Imports\nimport { Component, OnInit, Input, OnChanges, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n// Internal Imports\nimport { IconRegistryService } from './icon-registry.service';\nimport { BaseComponent } from '../shared/base.component';\n\n/**\n * Freyja SVG ICON Component according to specifics of Freyja Design\n */\n@Component({\n  selector: 'fj-svg-icon',\n  templateUrl: './svg-icon.component.html',\n  styleUrls: ['./svg-icon.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SvgIconComponent extends BaseComponent implements OnInit, OnChanges {\n\n  /**\n   * Name of icon or svg file to be pulled from cdn/repository\n   */\n  @Input() svgName = '';\n\n  /**\n   * If it's going to be inline to other content\n   */\n  @Input() inline: Boolean = true;\n\n  @Input() iconClass = '';\n  @Input() width: number;\n  @Input() fillColor = '#BFBFBF';\n  @Input() strokeColor: string;\n  @Input() display = 'inline-flex';\n  @Input() opacity = 1;\n\n  /**\n   * Capture reference to element ref to inject svg into html\n   * @param _iconRegistryService Icon Registry service to pull and cache icons\n   * @param _elementRef Reference to Component HTML to inject SVG\n   */\n  constructor(private _iconRegistryService: IconRegistryService,\n    public _elementRef: ElementRef) {\n      super();\n    }\n\n  /**\n   * Load Icon SCG from Service\n   */\n  ngOnInit() {\n    this.loadSvgIconByName();\n  }\n\n  /**\n   * Method to call registry service to get icon svg\n   */\n  private loadSvgIconByName() {\n    if (this.svgName) {\n      this._iconRegistryService.addSvgIcon(this.svgName).pipe(take(1)).subscribe(\n        svg => this.insertSvgElement(svg),\n        (err: Error) => console.log(`Error retrieving icon: ${err.message}`)\n      );\n    }\n  }\n\n\n  /**\n   * Insert SVG content to component nativeElement\n   * @param svg SVG content for icon fetch from service\n   */\n  private insertSvgElement(svg: SVGElement) {\n    this.clearSvgElement();\n\n    this._elementRef.nativeElement.appendChild(svg);\n  }\n\n  /**\n   * Clear Component SVG before inserting\n   */\n  private clearSvgElement() {\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\n    const childCount = layoutElement.childNodes.length;\n\n    for (let i = 0; i < childCount; i++) {\n      layoutElement.removeChild(layoutElement.childNodes[i]);\n    }\n  }\n\n  /**\n   * Capture on change and update classes\n   */\n  ngOnChanges() {\n    this.generateClass();\n  }\n\n\n  /**\n   * @description Generates the class for the icon\n   */\n  public generateClass() {\n    this.class = `${this.iconClass} `\n      + `${this.fillColor ? 'icon--fill--' + this.fillColor : ''} `\n      + `${this.strokeColor ? 'icon--stroke--' + this.strokeColor : ''}`;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [SvgIconComponent]\n})\nexport class FjSvgIconModule { }\n","// Angular Imports\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n// Internal Imports\nimport { BaseComponent } from '../shared/base.component';\n\n\n/**\n * Counter for Next Id\n */\nlet nextId = 0;\n\n/**\n * Freyja Accordion Component according to specifics of Freyja Design\n */\n@Component({\n  selector: 'fj-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionComponent extends BaseComponent {\n\n\n  // This is to make component open state controlled\n  private isOpen = false;\n\n  /**\n   * Provide unique ID or it will use auto generated from counter\n   */\n  @Input() id = `fj-accordion-${++nextId}`;\n\n  /**\n   * Will determine if acordion is expanded or not\n   */\n  @Input()\n  get open(): boolean {\n    return this.isOpen;\n  }\n  set open(val: boolean) {\n    if (val !== this.isOpen) {\n      this.isOpen = this.coerceBooleanInput(val);\n    }\n  }\n\n  /**\n   * Will emit if open state get's changed on click\n   */\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Will toggle open state and emit on Change event\n   * @param evt HTML Click Event\n   */\n  toggleState(evt): void {\n    evt.stopPropagation();\n    this.open = !this.open;\n    this.change.emit(this.open);  }\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const base = 'fj-accordion--';\n    const classes = {\n      [`${base}open`]: this.open,\n      [`${base}disabled`]: this.disabled,\n      [`${base}label-after`]: this.labelPosition === 'after'\n    };\n    return classes;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccordionComponent } from './accordion.component';\n\n@NgModule({\n  declarations: [AccordionComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AccordionComponent\n  ]\n})\nexport class FjAccordionModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'fj-content-switcher',\n  templateUrl: './content-switcher.component.html',\n  styleUrls: ['./content-switcher.component.scss']\n})\nexport class ContentSwitcherComponent implements OnInit{\n\n  /**\n   * content switcher options\n   */\n  @Input() options = [];\n  /**\n   * the selected value of the content switcher\n   */\n  @Input() selectedOption;\n  /**\n   * event triggered when an option is selected\n   */\n  @Output() optionSelected: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the id of the active tab\n   */\n  public activeTab = 0;\n\n  ngOnInit() {\n    if (this.selectedOption) {\n      this.activeTab = this.options.findIndex(option => this.selectedOption.toString() === option.value.toString());\n    }\n  }\n  /**\n   *\n   * @param index - index of the selected element\n   * @param value - value of the selected element\n   */\n  selectOption(index: number, value: number) {\n    this.activeTab = index;\n    const selectedElement = {\n      index,\n      value\n    };\n    this.optionSelected.emit(selectedElement);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContentSwitcherComponent } from './content-switcher.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [ContentSwitcherComponent],\n  declarations: [ContentSwitcherComponent]\n})\nexport class FjContentSwitcherModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fj-light-box',\n  templateUrl: './light-box.component.html',\n  styleUrls: ['./light-box.component.scss']\n})\nexport class LightBoxComponent implements OnInit {\n\n  /**\n   * images that will be shown in the lightbox\n   */\n  @Input() slides;\n\n  /**\n   * checks if the lightbox is open\n   */\n  isOpen = false;\n\n  /**\n   * current image slide index\n   */\n  currentSlideIndex = 1;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * opens the lightbox modal and set the current slide\n   * slideNumber - the seleceted slide number\n   */\n  openModal(slideNumber: number) {\n    if (this.slides) {\n      this.isOpen = true;\n      this.currentSlide(slideNumber);\n    }\n  }\n\n  /**\n   * closes the lightbox modal\n   */\n  closeModal() {\n    this.isOpen = false;\n  }\n\n  // Next/previous controls\n  plusSlides(n) {\n    this.showSlides(this.currentSlideIndex += n);\n  }\n\n  // Thumbnail image controls\n  currentSlide(n) {\n    this.showSlides(this.currentSlideIndex = n);\n  }\n\n  /**\n   * show the slides in the lightbox modal\n   * @param n - slide number\n   */\n  showSlides(n) {\n    if (n > this.slides.length) {\n      this.currentSlideIndex = 1;\n    } else if (n < 1) {\n      this.currentSlideIndex = this.slides.length;\n    }\n\n    this.slides.forEach( slide => {\n      slide.hidden = true;\n    });\n    this.slides[this.currentSlideIndex - 1].hidden = false;\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { CardItemOptions } from './card-item-options';\nimport { LightBoxComponent } from '../light-box/light-box.component';\n\n@Component({\n  selector: 'fj-card-item',\n  templateUrl: './card-item.component.html',\n  styleUrls: ['./card-item.component.scss']\n})\nexport class CardItemComponent implements OnInit {\n\n  /**\n   * current item data\n   */\n  @Input() item: any;\n  /**\n   * current item options\n   */\n  @Input() options: CardItemOptions;\n  /**\n   * card layout (vertical or horizontal)\n   */\n  @Input() layout: 'vertical' | 'horizontal';\n  /**\n   * if the card is highlight card\n   */\n  @Input() isHighlight: false;\n  /**\n   * event triggered when an action is clicked\n   */\n  @Output() actionClicked: EventEmitter<any> = new EventEmitter();\n  /**\n   * event triggered when an element is edited\n   */\n  @Output() elementEdited: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(LightBoxComponent) lightBox: LightBoxComponent;\n\n\n  /**\n   * checks wether the card item is expanded\n   * {boolean}\n   */\n  public isExpanded;\n\n  /**\n   * checks if a click event is a single ou double click\n   * {boolean}\n   */\n  public isSingleClick = false;\n  /**\n   * checks wether the card item elements are in edit mode\n   * {boolean}\n   */\n  public isEdit = {\n    title: false,\n    subText: false,\n    subText2: false,\n    caption: false,\n    link: false,\n    date1: false,\n    date2: false,\n    dateHeader1: false,\n    dateHeader2: false,\n    details: false,\n    description: false,\n    tags: false\n  };\n\n  public showBelowMenu = false;\n\n  public inputFieldStyles  = { marginTop: 0, width: '100%' };\n\n  public lightBoxImages;\n\n  constructor(private eRef: ElementRef) {}\n  ngOnInit() {\n    // init dynamic details field isEdit value to false\n    if (this.options && this.options.details) {\n      this.options.details.forEach( (detailItem, index: number) => {\n        this.isEdit['detailItem' + index] = false;\n      });\n    }\n  }\n\n  /**\n   * fired when an action has been clicked\n   * @param evt - click event\n   * @param actionType - type of the action that has been fired\n   */\n  public onActionClicked(evt, actionType?: string) {\n    if (evt.stopPropagation) {\n      evt.stopPropagation();\n    } else {\n      actionType = evt;\n    }\n    this.actionClicked.emit(actionType);\n  }\n\n  /**\n   * activates edit mode for one field\n   * @param evt - click event\n   * @param field - field to be edited\n   */\n  public activateEditMode(evt, field) {\n    this.isSingleClick = false;\n    this.isEdit[field] = true;\n  }\n\n  /**\n   * deactivates edit mode for all fields\n   */\n  public deactivateEditMode() {\n    this.isEdit = {\n      title: false,\n      subText: false,\n      subText2: false,\n      caption: false,\n      link: false,\n      date1: false,\n      date2: false,\n      dateHeader1: false,\n      dateHeader2: false,\n      details: false,\n      description: false,\n      tags: false\n    };\n  }\n\n  /**\n   * toggles expanded view on single click\n   */\n  public toggleExpanded() {\n    // deactivate any active edit mode\n    this.isSingleClick = true;\n    setTimeout(() => {\n      if (this.isSingleClick) {\n        this.deactivateEditMode();\n        this.isExpanded = !this.isExpanded;\n      }\n    }, 250);\n\n  }\n\n  /**\n   * a function that will be triggered when an editable input is focused and it will deactivate the edit mode for other inputs\n   * @param {string} element - element  is edited\n   */\n  public onInputFocused(element: string) {\n    Object.keys(this.isEdit).forEach( key => {\n      if (key !== element && this.isEdit[key]) {\n        this.isEdit[key] = false;\n      }\n    });\n  }\n\n  /**\n   * a function that is triggered when the card item picture is clicked and it sets the image in the lightbox component\n   */\n  public onPictureClicked() {\n    if (this.item[this.options.picture.image] && this.item[this.options.title.prop]) {\n      this.lightBoxImages = [\n        {\n          src: this.item[this.options.picture.image],\n          alt: this.item[this.options.title.prop]\n        }\n      ];\n      this.lightBox.openModal(1);\n    }\n  }\n\n  /**\n   * a function that will be triggered when an item has been edited\n   * @param {string} value - value of the edited element\n   * @param {string} element - element that is edited\n   * @param {number} index of the element in case of dynamic fields like details blocks\n   */\n  public onEditElement(value: string, element: string, index?: number) {\n    this.isEdit[element] = false;\n    const editObj = {\n      element,\n      value,\n      index\n    };\n    this.elementEdited.emit(editObj);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {BaseComponent} from '../shared/base.component';\nimport {FormGroup} from '@angular/forms';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'fj-native-dropdown',\n  templateUrl: './native-dropdown.component.html',\n  styleUrls: ['./native-dropdown.component.scss']\n})\nexport class NativeDropdownComponent extends BaseComponent {\n  /**\n   * options of the dropdown\n   */\n  @Input() options = [];\n  /**\n   * dropdown id\n   */\n  @Input() id = `fj-native-dd-${++nextId}`;\n  /**\n   * dropdown width\n   */\n  @Input() width: string;\n  /**\n   * wether or not to show default value after selecting an option\n   */\n  @Input() showDefaultOnCLick = false;\n  /**\n   * event that is triggered when an option is selected\n   */\n  @Output() optionSelected: EventEmitter<any> = new EventEmitter();\n  /**\n   * Error Message to be displayed\n   */\n  @Input() error: string;\n  /**\n   * reactive form control name\n   */\n  @Input() controlName: string;\n  /**\n   * reactive form group\n   */\n  @Input() formGroup: FormGroup;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * function triggered when an option is selected\n   * @param evt - mouse click event\n   */\n  onOptionSelected(evt) {\n    evt.stopPropagation();\n    const dropdownElem: any = document.getElementById(this.id);\n    this.optionSelected.emit(dropdownElem.value);\n    if (this.showDefaultOnCLick) {\n      // reselect default value\n      dropdownElem.value = this.options[0].label;\n    }\n  }\n\n  /**\n   * @param evt - mouse click event\n   */\n  onDropdownClicked(evt) {\n    evt.stopPropagation();\n  }\n\n  /**\n   * @description Add css classes based on inputs like size, shape etc\n   */\n  public generateClassList() {\n    const baseCls = 'fj-native-dropdown--';\n    const classes = {\n      [baseCls + this.size]: this.size,\n    };\n    return classes;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NativeDropdownComponent } from './native-dropdown.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    NativeDropdownComponent\n  ],\n  exports: [\n    NativeDropdownComponent\n  ]\n})\nexport class FjNativeDropdownModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LightBoxComponent } from './light-box.component';\n\n@NgModule({\n  declarations: [\n    LightBoxComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LightBoxComponent\n  ]\n})\nexport class FjLightBoxModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardItemComponent } from './card-item.component';\nimport { FjButtonModule } from '../button/button.module';\nimport { FjNativeDropdownModule } from '../native-dropdown/native-dropdown.module';\nimport { FjTextInputModule } from '../text-input/text-input.module';\nimport { IconModule } from '../icon/icon.module';\nimport { FjLightBoxModule } from '../light-box/light-box.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IconModule,\n    FjButtonModule,\n    FjLightBoxModule,\n    FjTextInputModule,\n    FjNativeDropdownModule\n  ],\n  exports: [\n    CardItemComponent\n  ],\n  declarations: [CardItemComponent]\n})\nexport class FjCardItemModule { }\n","import {Component, EventEmitter, Input, Output, OnInit, ElementRef} from '@angular/core';\nimport {ModalContent} from './modal-options';\n\n@Component({\n  selector: 'fj-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n  /**\n   * Content of the modal window\n   */\n  @Input() modalContent: ModalContent = {};\n  /**\n   * size of the modal\n   */\n  @Input() size: 'small' | 'big';\n  /**\n   * custom styles\n   */\n  @Input() customStyles;\n  /**\n   * an output that will be emitted on an action is triggered in the modal\n   * @type {EventEmitter<any>}\n   */\n  @Output() actionClicked: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * flag to show or hide the modal\n   * @type {boolean}\n   */\n  showModal = false;\n\n  constructor(\n    private eRef: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (!this.size) {\n      this.size = 'small';\n    }\n  }\n  /**\n   * fired when an action has been clicked\n   * @param evt - click event\n   * @param actionType - type of the action that has been fired\n   */\n  public onActionClicked(evt, actionType?: string) {\n    if (evt.stopPropagation) {\n      evt.stopPropagation();\n    } else {\n      actionType = evt;\n    }\n    this.actionClicked.emit(actionType);\n    this.showModal = false;\n  }\n\n  /**\n   * this function avoid closing the modal when clicking on its content\n   * @param evt\n   */\n  modalClicked(evt) {\n    evt.stopPropagation();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalComponent } from './modal.component';\nimport {FjButtonModule} from '../button/button.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FjButtonModule\n  ],\n  exports: [ModalComponent],\n  declarations: [ModalComponent]\n})\nexport class FjModalModule { }\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport {\n  DropzoneComponent,\n  DropzoneDirective,\n  DropzoneConfigInterface\n} from 'ngx-dropzone-wrapper';\n\n@Component({\n  selector: 'fj-drag-and-drop',\n  templateUrl: './drag-and-drop.component.html',\n  styleUrls: ['./drag-and-drop.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FjDragAndDropComponent implements OnInit, OnChanges {\n  @ViewChild(DropzoneComponent) componentRef?: DropzoneComponent;\n  @ViewChild(DropzoneDirective) directiveRef?: DropzoneDirective;\n\n  @Output() uploadedDoc: EventEmitter<any> = new EventEmitter();\n  @Output() fileToUpload: EventEmitter<any> = new EventEmitter();\n  @Input() removeFile: any;\n  @Input() noFileSelected;\n  public disabled = false;\n  public showPlaceholder = true;\n  public uploadedFile: any;\n\n  public dropZoneconfig: DropzoneConfigInterface = {\n    clickable: '.trigger-upload',\n    maxFiles: 1,\n    autoReset: null,\n    errorReset: null,\n    cancelReset: null,\n    uploadMultiple: false\n  };\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.getParentChanges(changes);\n  }\n\n  /**\n   * @description called on upload error\n   * @param args\n   */\n  public onUploadError(args: any): void {\n    this.disabled = true;\n    return;\n  }\n\n  /**\n   * @description on drag-start event\n   * @param event\n   */\n  public onFileAdded(file) {\n    this.uploadedFile = file;\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      // event.target.result contains base64 encoded file\n      this.fileToUpload.emit(reader.result);\n    };\n    try {\n      reader.readAsDataURL(file);\n    } catch (error) {}\n    this.uploadedDoc.emit(file);\n    this.showPlaceholder = false;\n  }\n\n  /**\n   * @description - called on file removed from drag-drop area\n   * @description - emits null to the parent\n   * @param event\n   */\n  public onFileRemoved(event) {\n    this.fileToUpload.emit(null);\n    this.showPlaceholder = true;\n    this.disabled = false;\n  }\n\n  /**\n   * @description - resets drag-drop area on form submit and modal close events\n   * @description - sets showPlaceholder value to (true/false) to position the drop container\n   * @param {object} changes - object of type SimpleChanges\n   */\n  public getParentChanges(changes) {\n    if (changes.removeFile && changes.removeFile.currentValue) {\n      // clear dropzone\n      if (this.directiveRef) {\n        this.directiveRef.reset();\n      }\n      this.showPlaceholder = true;\n    }\n    // Diplay error message if a form is submitted without selecting a file\n    if (\n      changes.noFileSelected &&\n      changes.noFileSelected.currentValue === true\n    ) {\n      this.noFileSelected = true;\n    } else {\n      this.noFileSelected = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\n\nimport { FjDragAndDropComponent } from './drag-and-drop.component';\nimport { IconModule } from '../icon/icon.module';\nimport {FjButtonModule} from '../button/button.module';\n\nconst DEFAULT_DROPZONE_CONFIGURATIONS: DropzoneConfigInterface = {\n  url: '/',\n  maxFiles: 1,\n  dictDefaultMessage: '',\n  createImageThumbnails: true,\n  acceptedFiles: 'image/*, .pdf, .doc, .docx'\n};\n\n@NgModule({\n  declarations: [FjDragAndDropComponent],\n  imports: [\n    CommonModule,\n    DropzoneModule,\n    FjButtonModule,\n    IconModule\n  ],\n  exports: [FjDragAndDropComponent, DropzoneModule],\n  providers: [\n    {\n      provide: DROPZONE_CONFIG,\n      useValue: DEFAULT_DROPZONE_CONFIGURATIONS\n    }\n  ]\n})\nexport class FjDragAndDropModule {}\n","import { Component, Input, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IMyDateModel, INgxMyDpOptions, IMyDefaultMonth, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport {BaseComponent} from '../../lib/shared/base.component';\n\nconst moment = moment_;\n@Component({\n  selector: 'fj-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss']\n})\nexport class DatePickerComponent extends BaseComponent implements OnInit {\n  // public currentOptions: DatePickerOptions;\n  @Input() labelText = '';\n  @Input() formGroup: FormGroup;\n  @Input() controlName = '';\n  @Input() inputPlaceholder = '';\n  @Input() id: string;\n  @Input() errors = '';\n  @Input() options: any = {};\n  @Input() disabled = false;\n  @Input() icon = true;\n  @Input() border = true;\n  @Input() padding = true;\n  @Input() formOfOrigin: string;\n  @Input() timePicker = false;\n  @Input() timeLabel = 'Time';\n  @Input() required = false;\n  /**\n   * Error Message to be displayed\n   */\n  @Input() error: string;  @Input() dateTime: any = null;\n  @Input() fileCreateDate: any;\n  /**\n   * custom styles object for the input\n   */\n  @Input() customStyles;\n  /**\n   * To Apply forceful error state to input component\n   */\n  @Input() errored = false;\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  public date: string;\n  public timePickerToggle = true;\n  public dateIsOpen = false;\n  public timeFocus = false;\n\n  @Input() myDefaultMonth: IMyDefaultMonth;\n  @Input() myOptions: INgxMyDpOptions = {\n    dateFormat: 'dd.mm.yyyy',\n  };\n  @Output() dateChangeValue: EventEmitter<any> = new EventEmitter();\n  @Output() dateChangeEvent: EventEmitter<any> = new EventEmitter();\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.Date = this.formGroup.value[`${this.controlName}`];\n  }\n\n  /**\n   * called from the host click, toggles the date picker and prevents picker hiding when clicked on the header elements\n   * @param evt - mouse event\n   */\n  public toggleCalendar(evt) {\n    evt.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n    this.ngxdp.toggleCalendar();\n    const elem = document.querySelector('ngx-my-date-picker .header');\n    if (elem) {\n      elem.addEventListener('click', (event) => event.stopPropagation());\n    }\n  }\n\n  /**\n   * @description Fires when the date field change.\n   * @param event IMDateModel - structured datetime.\n   */\n  onDateChanged(event: IMyDateModel): void {\n    if (event.jsdate) {\n      this.Date = event.jsdate.toString();\n    } else {\n      this.Date = '';\n    }\n    // emit date change event to parent with true value\n    this.dateChangeEvent.emit(true);\n    // emit date change event to parent with event\n    this.dateChangeValue.emit(event);\n  }\n\n  // clear the date of the date picker;\n  clearDate(): void {\n    this.ngxdp.clearDate();\n    this.timePickerToggle = true;\n    this.formGroup.controls[`${this.controlName}`].setValue(null);\n  }\n\n  calendarToggle(event) {\n    this.dateIsOpen = event === 1;\n  }\n\n  /**\n   * @public Date\n   * @type {string}\n   * @method get\n   * @description gets the date part of this.dateTime as a formatted string.\n   * @returns {string} - formatted date or empty string if no this.dateTime.\n   */\n  public get Date() {\n    if (this.dateTime) {\n      if (this.timePicker) {\n        this.timePickerToggle = false;\n      }\n      return moment(this.dateTime).format('DD.MM.YYYY');\n    } else {\n      if (this.timePicker) {\n        this.timePickerToggle = true;\n      }\n      return '';\n    }\n  }\n\n  /**\n   * @public Date\n   * @type {date}\n   * @method set\n   * @description sets the datetime to the form.\n   * @param {string} datetime - string of formatted DATE part of a datetime.\n   */\n  public set Date(datetime) {\n    if (!datetime) {\n      this.dateTime = '';\n      if (this.timePicker) {\n        this.timePickerToggle = true;\n      }\n    } else {\n        this.dateTime = new Date(datetime);\n      this.formGroup.controls[`${this.controlName}`].setValue(this.dateTime);\n    }\n  }\n\n  /**\n   * Generate classes using BEM appraoch and bind to ngClass\n   */\n  public generateClassList() {\n    const classes = {\n      ['fj-input--' + this.size]: this.size,\n      ['fj-input--required']: this.required,\n      ['fj-input--error']: this.errored,\n    };\n    return classes;\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { INgxMyDpOptions } from 'ngx-mydatepicker';\n\n@Injectable()\nexport class DatePickerService {\n\n  editProgramSartDate: any;\n  editActivitySartDate: any;\n  approvalStartDate: any;\n  createMilestoneStartDate: any;\n  programDirectEntryStartDate: any;\n  getProgramDirectEntryCalendarStartDate: Subject<any> = new Subject<any>();\n  getEditProgramCalendarStartDate: Subject<any> = new Subject<any>();\n  getEditActivityCalendarStartDate: Subject<any> = new Subject<any>();\n  getApprovalCalendarStartDate: Subject<any> = new Subject<any>();\n  getCreateMilestoneCalendarStartDate: Subject<any> = new Subject<any>();\n\n  constructor() { }\n\n  //  Method set disableUntil Start date value until yesterday\n  disableUntil(options) {\n    const d: any = new Date();\n    d.setDate(d.getDate() - 1);\n    const copy = this.getCopyOfOptions(options);\n    copy.disableUntil = {\n      year: d.getFullYear(),\n      month: d.getMonth() + 1,\n      day: d.getDate()\n    };\n    const myOptions = copy;\n\n    return myOptions;\n  }\n\n  // Returns copy of myOptions for the Date\n  getCopyOfOptions(options): INgxMyDpOptions {\n    return JSON.parse(JSON.stringify(options));\n  }\n\n  public getEndDateCalendar(date, options) {\n    const myEndDateOptions = this.getCopyOfOptions(options);\n    myEndDateOptions.disableUntil = date;\n    myEndDateOptions.todayBtnTxt = 'End Date';\n    return myEndDateOptions;\n  }\n\n  getStartDate(date, form): boolean {\n    try {\n      const formatedDate = {\n        year: date.split('.')[2],\n        month: date.split('.')[1],\n        day: date.split('.')[0]\n      };\n      if (form === 'edit_program_form') {\n        this.editProgramSartDate = formatedDate;\n        this.getEditProgramCalendarStartDate.next(this.editProgramSartDate);\n      }\n      if (form === 'edit_activity_form') {\n        this.editActivitySartDate = formatedDate;\n        this.getEditActivityCalendarStartDate.next(this.editActivitySartDate);\n      }\n      if (form === 'approval_form') {\n        this.approvalStartDate = formatedDate;\n        this.getApprovalCalendarStartDate.next(this.approvalStartDate);\n      }\n      if (form === 'create_milestone_form') {\n        this.createMilestoneStartDate = formatedDate;\n        this.getCreateMilestoneCalendarStartDate.next(this.createMilestoneStartDate);\n      }\n      if (form === 'program_direct_entry_form') {\n        this.programDirectEntryStartDate = formatedDate;\n        this.getProgramDirectEntryCalendarStartDate.next(this.programDirectEntryStartDate);\n      }\n\n      return true;\n\n    } catch (error) {\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DatePickerComponent} from './date-picker.component';\nimport {NgxMyDatePickerConfig, NgxMyDatePickerModule} from 'ngx-mydatepicker';\nimport {IconModule} from '../icon/icon.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {DatePickerService} from './date-picker.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxMyDatePickerModule,\n    ReactiveFormsModule,\n    IconModule\n  ],\n  providers: [DatePickerService, NgxMyDatePickerConfig],\n  exports: [DatePickerComponent],\n  declarations: [DatePickerComponent]\n})\nexport class FjDatePickerModule { }\n","/*\n * Public API Surface of freyja-test\n */\n\nexport * from './lib/freyja.service';\nexport * from './lib/freyja.component';\nexport * from './lib/freyja.module';\n\nexport * from './lib/button/button.component';\nexport * from './lib/button/button.module';\n\nexport * from './lib/checkbox/checkbox.component';\nexport * from './lib/checkbox/checkbox.module';\n\nexport * from './lib/radio-button/radio-button.component';\nexport * from './lib/radio-button/radio-button.module';\n\nexport * from './lib/checkbox-grid/checkbox-grid.component';\nexport * from './lib/checkbox-grid/checkbox-grid.module';\n\nexport * from './lib/number-input/number-input.component';\nexport * from './lib/number-input/number-input.module';\n\nexport * from './lib/text-input/text-input.component';\nexport * from './lib/text-input/text-input.module';\n\nexport * from './lib/svg-icon/svg-icon.component';\nexport * from './lib/svg-icon/svg-icon.module';\n\nexport * from './lib/accordion/accordion.component';\nexport * from './lib/accordion/accordion.module';\n\nexport * from './lib/content-switcher/content-switcher.component';\nexport * from './lib/content-switcher/content-switcher.module';\n\nexport * from './lib/card-item/card-item.component';\nexport * from './lib/card-item/card-item.module';\nexport * from './lib/card-item/card-item-options';\n\n\nexport * from './lib/native-dropdown/native-dropdown.component';\nexport * from './lib/native-dropdown/native-dropdown.module';\n\nexport * from './lib/modal/modal.component';\nexport * from './lib/modal/modal.module';\n\nexport * from './lib/icon/icon.component';\nexport * from './lib/icon/icon.module';\n\nexport * from './lib/drag-and-drop/drag-and-drop.component';\nexport * from './lib/drag-and-drop/drag-and-drop.module';\n\nexport * from './lib/date-picker/date-picker.component';\nexport * from './lib/date-picker/date-picker.module';\n\nexport * from './lib/light-box/light-box.component';\nexport * from './lib/light-box/light-box.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {DatePickerService as Éµd} from './lib/date-picker/date-picker.service';\nexport {BaseComponent as Éµb} from './lib/shared/base.component';\nexport {IconBaseComponent as Éµa} from './lib/shared/icon-base.component';\nexport {IconRegistryService as Éµc} from './lib/svg-icon/icon-registry.service';"],"names":["nextId","observableOf"],"mappings":"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"}
