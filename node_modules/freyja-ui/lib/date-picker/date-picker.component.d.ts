import { OnInit, EventEmitter } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { IMyDateModel, INgxMyDpOptions, IMyDefaultMonth, NgxMyDatePickerDirective } from 'ngx-mydatepicker';
import { BaseComponent } from '../../lib/shared/base.component';
export declare class DatePickerComponent extends BaseComponent implements OnInit {
    labelText: string;
    formGroup: FormGroup;
    controlName: string;
    inputPlaceholder: string;
    id: string;
    errors: string;
    options: any;
    disabled: boolean;
    icon: boolean;
    border: boolean;
    padding: boolean;
    formOfOrigin: string;
    timePicker: boolean;
    timeLabel: string;
    required: boolean;
    /**
     * Error Message to be displayed
     */
    error: string;
    dateTime: any;
    fileCreateDate: any;
    /**
     * custom styles object for the input
     */
    customStyles: any;
    /**
     * To Apply forceful error state to input component
     */
    errored: boolean;
    ngxdp: NgxMyDatePickerDirective;
    date: string;
    timePickerToggle: boolean;
    dateIsOpen: boolean;
    timeFocus: boolean;
    myDefaultMonth: IMyDefaultMonth;
    myOptions: INgxMyDpOptions;
    dateChangeValue: EventEmitter<any>;
    dateChangeEvent: EventEmitter<any>;
    constructor();
    ngOnInit(): void;
    /**
     * called from the host click, toggles the date picker and prevents picker hiding when clicked on the header elements
     * @param evt - mouse event
     */
    toggleCalendar(evt: any): void;
    /**
     * @description Fires when the date field change.
     * @param event IMDateModel - structured datetime.
     */
    onDateChanged(event: IMyDateModel): void;
    clearDate(): void;
    calendarToggle(event: any): void;
    /**
     * @public Date
     * @type {string}
     * @method get
     * @description gets the date part of this.dateTime as a formatted string.
     * @returns {string} - formatted date or empty string if no this.dateTime.
     */
    /**
    * @public Date
    * @type {date}
    * @method set
    * @description sets the datetime to the form.
    * @param {string} datetime - string of formatted DATE part of a datetime.
    */
    Date: string;
    /**
     * Generate classes using BEM appraoch and bind to ngClass
     */
    generateClassList(): {
        [x: string]: boolean | "medium" | "small" | "micro" | "large";
        ['fj-input--required']: boolean;
        ['fj-input--error']: boolean;
    };
}
