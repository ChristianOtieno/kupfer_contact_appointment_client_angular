import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { CardItemOptions } from './card-item-options';
import { LightBoxComponent } from '../light-box/light-box.component';
export declare class CardItemComponent implements OnInit {
    private eRef;
    /**
     * current item data
     */
    item: any;
    /**
     * current item options
     */
    options: CardItemOptions;
    /**
     * card layout (vertical or horizontal)
     */
    layout: 'vertical' | 'horizontal';
    /**
     * if the card is highlight card
     */
    isHighlight: false;
    /**
     * event triggered when an action is clicked
     */
    actionClicked: EventEmitter<any>;
    /**
     * event triggered when an element is edited
     */
    elementEdited: EventEmitter<any>;
    lightBox: LightBoxComponent;
    /**
     * checks wether the card item is expanded
     * {boolean}
     */
    isExpanded: any;
    /**
     * checks if a click event is a single ou double click
     * {boolean}
     */
    isSingleClick: boolean;
    /**
     * checks wether the card item elements are in edit mode
     * {boolean}
     */
    isEdit: {
        title: boolean;
        subText: boolean;
        subText2: boolean;
        caption: boolean;
        link: boolean;
        date1: boolean;
        date2: boolean;
        dateHeader1: boolean;
        dateHeader2: boolean;
        details: boolean;
        description: boolean;
        tags: boolean;
    };
    showBelowMenu: boolean;
    inputFieldStyles: {
        marginTop: number;
        width: string;
    };
    lightBoxImages: any;
    constructor(eRef: ElementRef);
    ngOnInit(): void;
    /**
     * fired when an action has been clicked
     * @param evt - click event
     * @param actionType - type of the action that has been fired
     */
    onActionClicked(evt: any, actionType?: string): void;
    /**
     * activates edit mode for one field
     * @param evt - click event
     * @param field - field to be edited
     */
    activateEditMode(evt: any, field: any): void;
    /**
     * deactivates edit mode for all fields
     */
    deactivateEditMode(): void;
    /**
     * toggles expanded view on single click
     */
    toggleExpanded(): void;
    /**
     * a function that will be triggered when an editable input is focused and it will deactivate the edit mode for other inputs
     * @param {string} element - element  is edited
     */
    onInputFocused(element: string): void;
    /**
     * a function that is triggered when the card item picture is clicked and it sets the image in the lightbox component
     */
    onPictureClicked(): void;
    /**
     * a function that will be triggered when an item has been edited
     * @param {string} value - value of the edited element
     * @param {string} element - element that is edited
     * @param {number} index of the element in case of dynamic fields like details blocks
     */
    onEditElement(value: string, element: string, index?: number): void;
}
