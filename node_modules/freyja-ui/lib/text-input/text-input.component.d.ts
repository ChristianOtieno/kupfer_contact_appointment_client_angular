import { EventEmitter, OnChanges } from '@angular/core';
import { BaseComponent } from '../shared/base.component';
import { FormGroup } from '@angular/forms';
/**
 * Freyja Text Input Component according to specifics of Freyja Design
 */
export declare class TextInputComponent extends BaseComponent implements OnChanges {
    /**
     * Represent Internal state of component
     */
    private isErrored;
    private inputValue;
    /**
     * Unique ID for HTMl Element identifier
     */
    id: string;
    /**
     * custom styles object for the input
     */
    customStyles: any;
    /**
     * Input value to be displayed
     */
    value: string;
    /**
     * type of the input, default type is text
     */
    type: string;
    /**
     * To Apply forceful error state to input component
     */
    errored: boolean;
    /**
     * checkes if the element should be focused by default
     */
    focused: boolean;
    /**
     * Error Message to be displayed
     */
    error: string;
    /**
     * Callback for value change
     */
    change: EventEmitter<any>;
    /**
     * Callback for focus event
     */
    focus: EventEmitter<any>;
    /**
     * Callback for click event
     */
    click: EventEmitter<any>;
    /**
     * Callback for mouseout event
     */
    mouseout: EventEmitter<any>;
    /**
     * reactive form control name
     */
    controlName: string;
    /**
     * reactive form group
     */
    formGroup: FormGroup;
    constructor();
    ngOnChanges(): void;
    /**
      * Capture value change ang emit on change event callback
      * @param event HTML onChange Event
      */
    onValueChange(event: Event): void;
    /**
     * triggers on focus event
     * @param event HTML onFocus Event
     */
    onFocus(event: Event): void;
    /**
     * triggers on click event
     * @param event HTML click Event
     */
    onClick(event: Event): void;
    /**
     * Capture value change ang emit on mouseout event callback
     * @param event HTML onChange Event
     */
    onMouseOut(event: Event): void;
    /**
     * Generate classes using BEM appraoch and bind to ngClass
     */
    generateClassList(): {
        [x: string]: string | boolean;
        ['fj-input--required']: boolean;
        ['fj-input--error']: string | true;
    };
}
