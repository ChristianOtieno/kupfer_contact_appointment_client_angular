import { Component, EventEmitter, Input, Output } from '@angular/core';
export class ContentSwitcherComponent {
    constructor() {
        /**
         * content switcher options
         */
        this.options = [];
        /**
         * event triggered when an option is selected
         */
        this.optionSelected = new EventEmitter();
        /**
         * the id of the active tab
         */
        this.activeTab = 0;
    }
    ngOnInit() {
        if (this.selectedOption) {
            this.activeTab = this.options.findIndex(option => this.selectedOption.toString() === option.value.toString());
        }
    }
    /**
     *
     * @param index - index of the selected element
     * @param value - value of the selected element
     */
    selectOption(index, value) {
        this.activeTab = index;
        const selectedElement = {
            index,
            value
        };
        this.optionSelected.emit(selectedElement);
    }
}
ContentSwitcherComponent.decorators = [
    { type: Component, args: [{
                selector: 'fj-content-switcher',
                template: "<div class=\"content-switcher content-switcher--radius\">\n  <button *ngFor=\"let option of options; let i = index\"\n          class=\"content-switcher__tab\"\n          [ngClass]=\"{'content-switcher__tab--is-active': activeTab === i}\"\n          (click)=\"selectOption(i, option.value)\">\n    {{option.label}}\n  </button>\n</div>\n",
                styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.content-switcher{display:flex;flex-wrap:wrap;font-family:open-sans,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"}.content-switcher--rounded .content-switcher__tab:first-child{border-bottom-left-radius:2rem;border-top-left-radius:2rem}.content-switcher--rounded .content-switcher__tab:last-child{border-bottom-right-radius:2rem;border-top-right-radius:2rem}.content-switcher--radius .content-switcher__tab:first-child{border-right:0;border-bottom-left-radius:4px;border-top-left-radius:4px}.content-switcher--radius .content-switcher__tab:last-child{border-left:0;border-bottom-right-radius:4px;border-top-right-radius:4px}.content-switcher__tab{border:1px solid #1b51a0;color:#1b51a0;cursor:pointer;font-family:open-sans,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-size:.875rem;height:40px;min-width:104px;outline:0}.content-switcher__tab:hover{background-color:#dce8f9}.content-switcher__tab--is-active{background-color:#1b51a0!important;color:#fff;pointer-events:none}.content-switcher--sm .content-switcher__tab{font-size:.8125rem;height:32px}.content-switcher--disabled .content-switcher__tab{border-color:rgba(0,0,0,.15);color:var(--color-gray);pointer-events:none}.content-switcher--disabled .content-switcher__tab--is-active{background-color:rgba(0,0,0,.15);border-color:transparent;color:#fff}"]
            }] }
];
ContentSwitcherComponent.propDecorators = {
    options: [{ type: Input }],
    selectedOption: [{ type: Input }],
    optionSelected: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1zd2l0Y2hlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mcmV5amEtdWkvIiwic291cmNlcyI6WyJsaWIvY29udGVudC1zd2l0Y2hlci9jb250ZW50LXN3aXRjaGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBTzdFLE1BQU0sT0FBTyx3QkFBd0I7SUFMckM7UUFPRTs7V0FFRztRQUNNLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFLdEI7O1dBRUc7UUFDTyxtQkFBYyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBRWpFOztXQUVHO1FBQ0ksY0FBUyxHQUFHLENBQUMsQ0FBQztJQW9CdkIsQ0FBQztJQWxCQyxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxLQUFLLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztTQUMvRztJQUNILENBQUM7SUFDRDs7OztPQUlHO0lBQ0gsWUFBWSxDQUFDLEtBQWEsRUFBRSxLQUFhO1FBQ3ZDLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLE1BQU0sZUFBZSxHQUFHO1lBQ3RCLEtBQUs7WUFDTCxLQUFLO1NBQ04sQ0FBQztRQUNGLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzVDLENBQUM7OztZQTFDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsNlZBQWdEOzthQUVqRDs7O3NCQU1FLEtBQUs7NkJBSUwsS0FBSzs2QkFJTCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmotY29udGVudC1zd2l0Y2hlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb250ZW50LXN3aXRjaGVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29udGVudC1zd2l0Y2hlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnRTd2l0Y2hlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdHtcblxuICAvKipcbiAgICogY29udGVudCBzd2l0Y2hlciBvcHRpb25zXG4gICAqL1xuICBASW5wdXQoKSBvcHRpb25zID0gW107XG4gIC8qKlxuICAgKiB0aGUgc2VsZWN0ZWQgdmFsdWUgb2YgdGhlIGNvbnRlbnQgc3dpdGNoZXJcbiAgICovXG4gIEBJbnB1dCgpIHNlbGVjdGVkT3B0aW9uO1xuICAvKipcbiAgICogZXZlbnQgdHJpZ2dlcmVkIHdoZW4gYW4gb3B0aW9uIGlzIHNlbGVjdGVkXG4gICAqL1xuICBAT3V0cHV0KCkgb3B0aW9uU2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8qKlxuICAgKiB0aGUgaWQgb2YgdGhlIGFjdGl2ZSB0YWJcbiAgICovXG4gIHB1YmxpYyBhY3RpdmVUYWIgPSAwO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnNlbGVjdGVkT3B0aW9uKSB7XG4gICAgICB0aGlzLmFjdGl2ZVRhYiA9IHRoaXMub3B0aW9ucy5maW5kSW5kZXgob3B0aW9uID0+IHRoaXMuc2VsZWN0ZWRPcHRpb24udG9TdHJpbmcoKSA9PT0gb3B0aW9uLnZhbHVlLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGluZGV4IC0gaW5kZXggb2YgdGhlIHNlbGVjdGVkIGVsZW1lbnRcbiAgICogQHBhcmFtIHZhbHVlIC0gdmFsdWUgb2YgdGhlIHNlbGVjdGVkIGVsZW1lbnRcbiAgICovXG4gIHNlbGVjdE9wdGlvbihpbmRleDogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5hY3RpdmVUYWIgPSBpbmRleDtcbiAgICBjb25zdCBzZWxlY3RlZEVsZW1lbnQgPSB7XG4gICAgICBpbmRleCxcbiAgICAgIHZhbHVlXG4gICAgfTtcbiAgICB0aGlzLm9wdGlvblNlbGVjdGVkLmVtaXQoc2VsZWN0ZWRFbGVtZW50KTtcbiAgfVxufVxuIl19