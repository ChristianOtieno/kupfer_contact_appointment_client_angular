import { Component, Input, ViewChild, EventEmitter, Output } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { NgxMyDatePickerDirective } from 'ngx-mydatepicker';
import * as moment_ from 'moment';
import { BaseComponent } from '../../lib/shared/base.component';
const moment = moment_;
export class DatePickerComponent extends BaseComponent {
    constructor() {
        super();
        // public currentOptions: DatePickerOptions;
        this.labelText = '';
        this.controlName = '';
        this.inputPlaceholder = '';
        this.errors = '';
        this.options = {};
        this.disabled = false;
        this.icon = true;
        this.border = true;
        this.padding = true;
        this.timePicker = false;
        this.timeLabel = 'Time';
        this.required = false;
        this.dateTime = null;
        /**
         * To Apply forceful error state to input component
         */
        this.errored = false;
        this.timePickerToggle = true;
        this.dateIsOpen = false;
        this.timeFocus = false;
        this.myOptions = {
            dateFormat: 'dd.mm.yyyy',
        };
        this.dateChangeValue = new EventEmitter();
        this.dateChangeEvent = new EventEmitter();
    }
    ngOnInit() {
        this.Date = this.formGroup.value[`${this.controlName}`];
    }
    /**
     * called from the host click, toggles the date picker and prevents picker hiding when clicked on the header elements
     * @param evt - mouse event
     */
    toggleCalendar(evt) {
        evt.stopPropagation();
        if (this.disabled) {
            return;
        }
        this.ngxdp.toggleCalendar();
        const elem = document.querySelector('ngx-my-date-picker .header');
        if (elem) {
            elem.addEventListener('click', (event) => event.stopPropagation());
        }
    }
    /**
     * @description Fires when the date field change.
     * @param event IMDateModel - structured datetime.
     */
    onDateChanged(event) {
        if (event.jsdate) {
            this.Date = event.jsdate.toString();
        }
        else {
            this.Date = '';
        }
        // emit date change event to parent with true value
        this.dateChangeEvent.emit(true);
        // emit date change event to parent with event
        this.dateChangeValue.emit(event);
    }
    // clear the date of the date picker;
    clearDate() {
        this.ngxdp.clearDate();
        this.timePickerToggle = true;
        this.formGroup.controls[`${this.controlName}`].setValue(null);
    }
    calendarToggle(event) {
        this.dateIsOpen = event === 1;
    }
    /**
     * @public Date
     * @type {string}
     * @method get
     * @description gets the date part of this.dateTime as a formatted string.
     * @returns {string} - formatted date or empty string if no this.dateTime.
     */
    get Date() {
        if (this.dateTime) {
            if (this.timePicker) {
                this.timePickerToggle = false;
            }
            return moment(this.dateTime).format('DD.MM.YYYY');
        }
        else {
            if (this.timePicker) {
                this.timePickerToggle = true;
            }
            return '';
        }
    }
    /**
     * @public Date
     * @type {date}
     * @method set
     * @description sets the datetime to the form.
     * @param {string} datetime - string of formatted DATE part of a datetime.
     */
    set Date(datetime) {
        if (!datetime) {
            this.dateTime = '';
            if (this.timePicker) {
                this.timePickerToggle = true;
            }
        }
        else {
            this.dateTime = new Date(datetime);
            this.formGroup.controls[`${this.controlName}`].setValue(this.dateTime);
        }
    }
    /**
     * Generate classes using BEM appraoch and bind to ngClass
     */
    generateClassList() {
        const classes = {
            ['fj-input--' + this.size]: this.size,
            ['fj-input--required']: this.required,
            ['fj-input--error']: this.errored,
        };
        return classes;
    }
}
DatePickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'fj-date-picker',
                template: "<div class=\"fj-datepicker\" [ngClass]=\"generateClassList()\"  [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n  <label\n    [attr.for]=\"id\"\n    class=\"label--medium\"\n    *ngIf=\"label\"\n  >{{label}}</label>\n  <div class=\"fj-datepicker__container\">\n    <input\n      class=\"fj-datepicker__container__input\"\n      ngx-mydatepicker\n      #dp=\"ngx-mydatepicker\"\n      [options]=\"myOptions\"\n      [defaultMonth]=\"myDefaultMonth\"\n      (calendarToggle)=\"calendarToggle($event)\"\n      (dateChanged)=\"onDateChanged($event)\"\n      (click)=\"toggleCalendar($event)\"\n      [ngStyle]= \"customStyles\"\n      [disabled]=\"disabled\"\n      [attr.name]=\"id\"\n      [placeholder]=\"placeholder\"\n      [attr.value]=\"fileCreateDate ? fileCreateDate : Date\"\n    />\n    <fj-icon svgName=\"calendar\"\n             (click)=\"toggleCalendar($event)\"\n             *ngIf=\"!disabled\"\n             [fillColor]=\"'gray-light'\"\n             class=\"fj-datepicker__container__icon\"\n    >\n    </fj-icon>\n  </div>\n</div>\n",
                styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}:host{cursor:pointer}.fj-datepicker__container__icon{float:left;margin-top:.75rem;margin-left:-2.1875rem}.fj-datepicker__container__input{box-sizing:border-box;border:.0625rem solid rgba(0,0,0,.15);border-radius:.25rem;color:#000;display:block;font-size:.95rem;font-weight:500;height:2.5rem;margin-top:.25em;margin-right:.3125rem;outline:0;padding:.5625rem .75rem;float:left;transition:.2s linear}.fj-datepicker__container__input:focus{border-color:#1b51a0}.fj-datepicker__container__input:hover{color:rgba(0,0,0,.6)}.fj-datepicker__container__input::-webkit-input-placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-datepicker__container__input::-ms-input-placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-datepicker__container__input::placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-datepicker__container__input::-webkit-input-placeholder:hover .fj-datepicker__container__input::-webkit-input-placeholder{color:rgba(0,0,0,.6)}.fj-datepicker__container__input::-ms-input-placeholder:hover .fj-datepicker__container__input::-ms-input-placeholder{color:rgba(0,0,0,.6)}.fj-datepicker__container__input::placeholder:hover .fj-datepicker__container__input::placeholder{color:rgba(0,0,0,.6)}.fj-datepicker__container__input:disabled{background-color:#f2f2f2;border-color:#f2f2f2;cursor:not-allowed}.fj-datepicker__container__input:disabled::-webkit-input-placeholder{color:rgba(0,0,0,.2)}.fj-datepicker__container__input:disabled::-ms-input-placeholder{color:rgba(0,0,0,.2)}.fj-datepicker__container__input:disabled::placeholder{color:rgba(0,0,0,.2)}.fj-datepicker__container__input--small{height:2rem;font-size:.875rem;padding:.5625rem .625rem}.fj-datepicker__container__input--micro{height:1.5rem;font-size:.75rem;padding:.5625rem .5rem}.fj-datepicker__container__input--error{border-color:#db0000}.fj-datepicker__container__input--required:after{content:\" *\"}label{cursor:pointer;font-size:.875rem}label.label--medium{font-size:.75rem;padding-left:.5em}label.label--disabled{color:rgba(0,0,0,.2)}.input-error{color:#db0000;font-size:.75rem;padding:.5em}.error--label{font-size:.75rem;padding-left:.5em;color:#db0000}/deep/ ngx-my-date-picker .ngxmdp{position:absolute}/deep/ ngx-my-date-picker .ngxmdp .currmonth,/deep/ ngx-my-date-picker .ngxmdp .header,/deep/ ngx-my-date-picker .ngxmdp .headerbtn,/deep/ ngx-my-date-picker .ngxmdp .headerbtncell,/deep/ ngx-my-date-picker .ngxmdp .headerlabelbtn,/deep/ ngx-my-date-picker .ngxmdp .weekdaytitle{background-color:#fff}/deep/ ngx-my-date-picker .ngxmdp .weekdaytitle{padding-top:.875rem;padding-bottom:.875rem;color:#1b51a0;font-weight:600}/deep/ ngx-my-date-picker .ngxmdp .currmonth,/deep/ ngx-my-date-picker .ngxmdp .daycell,/deep/ ngx-my-date-picker .ngxmdp .highlight{color:rgba(0,0,0,.15);font-weight:500}/deep/ ngx-my-date-picker .ngxmdp .tablesingleday:hover,/deep/ ngx-my-date-picker .ngxmdp .tablesinglemonth:hover,/deep/ ngx-my-date-picker .ngxmdp .tablesingleyear:hover{background-color:#1b51a0;border-radius:.25rem}/deep/ ngx-my-date-picker .ngxmdp .tablesingleday:hover .currmonth,/deep/ ngx-my-date-picker .ngxmdp .tablesinglemonth:hover .currmonth,/deep/ ngx-my-date-picker .ngxmdp .tablesingleyear:hover .currmonth{color:#fff}/deep/ ngx-my-date-picker .ngxmdp .selectedday .datevalue{background-color:#1b51a0!important;color:#fff}/deep/ ngx-my-date-picker .ngxmdp .selector{padding:.3125rem;left:-9.375rem;background:#fff;border-color:rgba(0,0,0,.125)}/deep/ ngx-my-date-picker .ngxmdp .selector:focus{border-color:rgba(0,0,0,.125);box-shadow:0 2px 5px 0 rgba(0,0,0,.15)}/deep/ ngx-my-date-picker .ngxmdp .selectorarrow:focus:before{border-bottom-color:rgba(0,0,0,.125)}/deep/ ngx-my-date-picker .ngxmdp .selectorarrow:after{border-bottom-color:#fff}/deep/ ngx-my-date-picker .markcurrday,/deep/ ngx-my-date-picker markcurrmonth{text-decoration:none}"]
            }] }
];
/** @nocollapse */
DatePickerComponent.ctorParameters = () => [];
DatePickerComponent.propDecorators = {
    labelText: [{ type: Input }],
    formGroup: [{ type: Input }],
    controlName: [{ type: Input }],
    inputPlaceholder: [{ type: Input }],
    id: [{ type: Input }],
    errors: [{ type: Input }],
    options: [{ type: Input }],
    disabled: [{ type: Input }],
    icon: [{ type: Input }],
    border: [{ type: Input }],
    padding: [{ type: Input }],
    formOfOrigin: [{ type: Input }],
    timePicker: [{ type: Input }],
    timeLabel: [{ type: Input }],
    required: [{ type: Input }],
    error: [{ type: Input }],
    dateTime: [{ type: Input }],
    fileCreateDate: [{ type: Input }],
    customStyles: [{ type: Input }],
    errored: [{ type: Input }],
    ngxdp: [{ type: ViewChild, args: ['dp',] }],
    myDefaultMonth: [{ type: Input }],
    myOptions: [{ type: Input }],
    dateChangeValue: [{ type: Output }],
    dateChangeEvent: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,