import { Component, ViewChild, ViewEncapsulation, EventEmitter, Output, Input } from '@angular/core';
import { DropzoneComponent, DropzoneDirective } from 'ngx-dropzone-wrapper';
export class FjDragAndDropComponent {
    constructor() {
        this.uploadedDoc = new EventEmitter();
        this.fileToUpload = new EventEmitter();
        this.disabled = false;
        this.showPlaceholder = true;
        this.dropZoneconfig = {
            clickable: '.trigger-upload',
            maxFiles: 1,
            autoReset: null,
            errorReset: null,
            cancelReset: null,
            uploadMultiple: false
        };
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getParentChanges(changes);
    }
    /**
     * @description called on upload error
     * @param args
     */
    onUploadError(args) {
        this.disabled = true;
        return;
    }
    /**
     * @description on drag-start event
     * @param event
     */
    onFileAdded(file) {
        this.uploadedFile = file;
        const reader = new FileReader();
        reader.onload = (event) => {
            // event.target.result contains base64 encoded file
            this.fileToUpload.emit(reader.result);
        };
        try {
            reader.readAsDataURL(file);
        }
        catch (error) { }
        this.uploadedDoc.emit(file);
        this.showPlaceholder = false;
    }
    /**
     * @description - called on file removed from drag-drop area
     * @description - emits null to the parent
     * @param event
     */
    onFileRemoved(event) {
        this.fileToUpload.emit(null);
        this.showPlaceholder = true;
        this.disabled = false;
    }
    /**
     * @description - resets drag-drop area on form submit and modal close events
     * @description - sets showPlaceholder value to (true/false) to position the drop container
     * @param {object} changes - object of type SimpleChanges
     */
    getParentChanges(changes) {
        if (changes.removeFile && changes.removeFile.currentValue) {
            // clear dropzone
            if (this.directiveRef) {
                this.directiveRef.reset();
            }
            this.showPlaceholder = true;
        }
        // Diplay error message if a form is submitted without selecting a file
        if (changes.noFileSelected &&
            changes.noFileSelected.currentValue === true) {
            this.noFileSelected = true;
        }
        else {
            this.noFileSelected = false;
        }
    }
}
FjDragAndDropComponent.decorators = [
    { type: Component, args: [{
                selector: 'fj-drag-and-drop',
                template: "<div class=\"dropzone drag-drop\">\n    <div *ngIf=\"noFileSelected && showPlaceholder\">\n        <p class=\"drag-drop__file-missing\">No file is selected</p>\n    </div>\n    <div\n        class=\"dropzone-container trigger-upload\"\n        [dropzone]=\"dropZoneconfig\"\n        [disabled]=\"disabled\"\n        (error)=\"onUploadError($event)\"\n        (addedFile)=\"onFileAdded($event)\"\n        (removedFile)=\"onFileRemoved($event)\"\n    >\n        <div class=\"dropzone-container__placeholder trigger-upload\">\n            <i class=\"dropzone-container__icon-upload icon-document-upload\"></i>\n            <p class=\"dropzone-container__label-dragdrop\">\n               Drag and Drop\n            </p>\n            <p class=\"dropzone-container__label-or\">\n                or\n            </p>\n          <fj-button\n            [icon]=\"'plus'\"\n            [iconMargin]=\"'0 5px 0px 0px'\"\n            [margin]=\"'0px'\"\n            [ghost]=\"true\"\n            [size]=\"'med'\"\n          >\n            Choose a local file\n          </fj-button>\n        </div>\n    </div>\n    <div class=\"drag-drop__updload-info\">\n        <fj-icon svgName=\"attachment\"\n                 fillColor=\"black\" class=\"drag-drop__updload-info-icon\"></fj-icon>\n        <span>Maximum file size is 20MB</span>\n    </div>\n</div>\n\n",
                encapsulation: ViewEncapsulation.None,
                styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.drag-drop{display:flex;flex-direction:column;background-color:#f2f2f2;height:100%;width:100%;padding:1.75rem;box-sizing:border-box}.drag-drop__icon-right{float:right}.drag-drop__icon-right:hover{cursor:pointer}.drag-drop__file-missing{color:#db0000}.drag-drop__updload-info{display:inline-flex;align-items:center;margin-top:1.5625rem;font-size:.875rem;color:rgba(0,0,0,.45)}.drag-drop__updload-info-icon{margin-right:.4375rem}.dropzone-container{flex:1;justify-content:center;align-items:center;overflow:hidden;display:flex;position:relative;width:100%;cursor:pointer;background-color:rgba(0,0,0,.02);border:.0625rem dashed #f2f2f2;border-radius:.25rem;box-sizing:border-box;padding:.3125rem;text-align:center;line-height:.8125rem;transition:.3s}.dropzone-container span{display:block}.dropzone-container__icon-upload{font-size:2.5rem;color:#f2f2f2}.dropzone-container__placeholder{display:block;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}.dropzone-container__label-dragdrop{margin-top:1.5625rem;color:rgba(0,0,0,.6)}.dropzone-container__label-or{color:rgba(0,0,0,.6)}.dropzone-container__btn-icon{margin-right:.5rem}.dropzone-container:hover{border:.0625rem dashed #1b51a0;background-color:#dce8f9}.dropzone-container:hover .dropzone-container__icon-upload{color:#1b51a0}.dropzone-container.dz-drag-hover{border:.0625rem solid #1b51a0;background-color:#dce8f9}.dropzone-container.dz-drag-hover .dropzone-container__placeholder{-webkit-transform:scale(.95);transform:scale(.95)}.dropzone-container.dz-drag-hover i{color:#1b51a0}"]
            }] }
];
/** @nocollapse */
FjDragAndDropComponent.ctorParameters = () => [];
FjDragAndDropComponent.propDecorators = {
    componentRef: [{ type: ViewChild, args: [DropzoneComponent,] }],
    directiveRef: [{ type: ViewChild, args: [DropzoneDirective,] }],
    uploadedDoc: [{ type: Output }],
    fileToUpload: [{ type: Output }],
    removeFile: [{ type: Input }],
    noFileSelected: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1hbmQtZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mcmV5amEtdWkvIiwic291cmNlcyI6WyJsaWIvZHJhZy1hbmQtZHJvcC9kcmFnLWFuZC1kcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULFNBQVMsRUFDVCxpQkFBaUIsRUFDakIsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBR04sTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixpQkFBaUIsRUFFbEIsTUFBTSxzQkFBc0IsQ0FBQztBQVE5QixNQUFNLE9BQU8sc0JBQXNCO0lBcUJqQztRQWpCVSxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3BELGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFHeEQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixvQkFBZSxHQUFHLElBQUksQ0FBQztRQUd2QixtQkFBYyxHQUE0QjtZQUMvQyxTQUFTLEVBQUUsaUJBQWlCO1lBQzVCLFFBQVEsRUFBRSxDQUFDO1lBQ1gsU0FBUyxFQUFFLElBQUk7WUFDZixVQUFVLEVBQUUsSUFBSTtZQUNoQixXQUFXLEVBQUUsSUFBSTtZQUNqQixjQUFjLEVBQUUsS0FBSztTQUN0QixDQUFDO0lBRWEsQ0FBQztJQUVoQixRQUFRLEtBQUksQ0FBQztJQUViLFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGFBQWEsQ0FBQyxJQUFTO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLE9BQU87SUFDVCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVyxDQUFDLElBQUk7UUFDckIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsTUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUNoQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDeEIsbURBQW1EO1lBQ25ELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUM7UUFDRixJQUFJO1lBQ0YsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QjtRQUFDLE9BQU8sS0FBSyxFQUFFLEdBQUU7UUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxhQUFhLENBQUMsS0FBSztRQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLGdCQUFnQixDQUFDLE9BQU87UUFDN0IsSUFBSSxPQUFPLENBQUMsVUFBVSxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFFO1lBQ3pELGlCQUFpQjtZQUNqQixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDM0I7WUFDRCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztTQUM3QjtRQUNELHVFQUF1RTtRQUN2RSxJQUNFLE9BQU8sQ0FBQyxjQUFjO1lBQ3RCLE9BQU8sQ0FBQyxjQUFjLENBQUMsWUFBWSxLQUFLLElBQUksRUFDNUM7WUFDQSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QjthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7U0FDN0I7SUFDSCxDQUFDOzs7WUEvRkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLDYwQ0FBNkM7Z0JBRTdDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN0Qzs7Ozs7MkJBRUUsU0FBUyxTQUFDLGlCQUFpQjsyQkFDM0IsU0FBUyxTQUFDLGlCQUFpQjswQkFFM0IsTUFBTTsyQkFDTixNQUFNO3lCQUNOLEtBQUs7NkJBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBFdmVudEVtaXR0ZXIsXG4gIE91dHB1dCxcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgU2ltcGxlQ2hhbmdlc1xufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtcbiAgRHJvcHpvbmVDb21wb25lbnQsXG4gIERyb3B6b25lRGlyZWN0aXZlLFxuICBEcm9wem9uZUNvbmZpZ0ludGVyZmFjZVxufSBmcm9tICduZ3gtZHJvcHpvbmUtd3JhcHBlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZqLWRyYWctYW5kLWRyb3AnLFxuICB0ZW1wbGF0ZVVybDogJy4vZHJhZy1hbmQtZHJvcC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RyYWctYW5kLWRyb3AuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBGakRyYWdBbmREcm9wQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBAVmlld0NoaWxkKERyb3B6b25lQ29tcG9uZW50KSBjb21wb25lbnRSZWY/OiBEcm9wem9uZUNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZChEcm9wem9uZURpcmVjdGl2ZSkgZGlyZWN0aXZlUmVmPzogRHJvcHpvbmVEaXJlY3RpdmU7XG5cbiAgQE91dHB1dCgpIHVwbG9hZGVkRG9jOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGZpbGVUb1VwbG9hZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBJbnB1dCgpIHJlbW92ZUZpbGU6IGFueTtcbiAgQElucHV0KCkgbm9GaWxlU2VsZWN0ZWQ7XG4gIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuICBwdWJsaWMgc2hvd1BsYWNlaG9sZGVyID0gdHJ1ZTtcbiAgcHVibGljIHVwbG9hZGVkRmlsZTogYW55O1xuXG4gIHB1YmxpYyBkcm9wWm9uZWNvbmZpZzogRHJvcHpvbmVDb25maWdJbnRlcmZhY2UgPSB7XG4gICAgY2xpY2thYmxlOiAnLnRyaWdnZXItdXBsb2FkJyxcbiAgICBtYXhGaWxlczogMSxcbiAgICBhdXRvUmVzZXQ6IG51bGwsXG4gICAgZXJyb3JSZXNldDogbnVsbCxcbiAgICBjYW5jZWxSZXNldDogbnVsbCxcbiAgICB1cGxvYWRNdWx0aXBsZTogZmFsc2VcbiAgfTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdPbkluaXQoKSB7fVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICB0aGlzLmdldFBhcmVudENoYW5nZXMoY2hhbmdlcyk7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIGNhbGxlZCBvbiB1cGxvYWQgZXJyb3JcbiAgICogQHBhcmFtIGFyZ3NcbiAgICovXG4gIHB1YmxpYyBvblVwbG9hZEVycm9yKGFyZ3M6IGFueSk6IHZvaWQge1xuICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gb24gZHJhZy1zdGFydCBldmVudFxuICAgKiBAcGFyYW0gZXZlbnRcbiAgICovXG4gIHB1YmxpYyBvbkZpbGVBZGRlZChmaWxlKSB7XG4gICAgdGhpcy51cGxvYWRlZEZpbGUgPSBmaWxlO1xuICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLm9ubG9hZCA9IChldmVudCkgPT4ge1xuICAgICAgLy8gZXZlbnQudGFyZ2V0LnJlc3VsdCBjb250YWlucyBiYXNlNjQgZW5jb2RlZCBmaWxlXG4gICAgICB0aGlzLmZpbGVUb1VwbG9hZC5lbWl0KHJlYWRlci5yZXN1bHQpO1xuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7fVxuICAgIHRoaXMudXBsb2FkZWREb2MuZW1pdChmaWxlKTtcbiAgICB0aGlzLnNob3dQbGFjZWhvbGRlciA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiAtIGNhbGxlZCBvbiBmaWxlIHJlbW92ZWQgZnJvbSBkcmFnLWRyb3AgYXJlYVxuICAgKiBAZGVzY3JpcHRpb24gLSBlbWl0cyBudWxsIHRvIHRoZSBwYXJlbnRcbiAgICogQHBhcmFtIGV2ZW50XG4gICAqL1xuICBwdWJsaWMgb25GaWxlUmVtb3ZlZChldmVudCkge1xuICAgIHRoaXMuZmlsZVRvVXBsb2FkLmVtaXQobnVsbCk7XG4gICAgdGhpcy5zaG93UGxhY2Vob2xkZXIgPSB0cnVlO1xuICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gLSByZXNldHMgZHJhZy1kcm9wIGFyZWEgb24gZm9ybSBzdWJtaXQgYW5kIG1vZGFsIGNsb3NlIGV2ZW50c1xuICAgKiBAZGVzY3JpcHRpb24gLSBzZXRzIHNob3dQbGFjZWhvbGRlciB2YWx1ZSB0byAodHJ1ZS9mYWxzZSkgdG8gcG9zaXRpb24gdGhlIGRyb3AgY29udGFpbmVyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBjaGFuZ2VzIC0gb2JqZWN0IG9mIHR5cGUgU2ltcGxlQ2hhbmdlc1xuICAgKi9cbiAgcHVibGljIGdldFBhcmVudENoYW5nZXMoY2hhbmdlcykge1xuICAgIGlmIChjaGFuZ2VzLnJlbW92ZUZpbGUgJiYgY2hhbmdlcy5yZW1vdmVGaWxlLmN1cnJlbnRWYWx1ZSkge1xuICAgICAgLy8gY2xlYXIgZHJvcHpvbmVcbiAgICAgIGlmICh0aGlzLmRpcmVjdGl2ZVJlZikge1xuICAgICAgICB0aGlzLmRpcmVjdGl2ZVJlZi5yZXNldCgpO1xuICAgICAgfVxuICAgICAgdGhpcy5zaG93UGxhY2Vob2xkZXIgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBEaXBsYXkgZXJyb3IgbWVzc2FnZSBpZiBhIGZvcm0gaXMgc3VibWl0dGVkIHdpdGhvdXQgc2VsZWN0aW5nIGEgZmlsZVxuICAgIGlmIChcbiAgICAgIGNoYW5nZXMubm9GaWxlU2VsZWN0ZWQgJiZcbiAgICAgIGNoYW5nZXMubm9GaWxlU2VsZWN0ZWQuY3VycmVudFZhbHVlID09PSB0cnVlXG4gICAgKSB7XG4gICAgICB0aGlzLm5vRmlsZVNlbGVjdGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ub0ZpbGVTZWxlY3RlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuIl19