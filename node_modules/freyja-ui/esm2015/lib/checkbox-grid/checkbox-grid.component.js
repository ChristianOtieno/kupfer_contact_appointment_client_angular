import { Component, Input, EventEmitter, Output } from '@angular/core';
import { FormGroup } from '@angular/forms';
export class CheckboxGridComponent {
    constructor() {
        this.inline = true;
        this.noPadding = false;
        this.noMargin = false;
        this.smallText = false;
        this.checkboxClicked = new EventEmitter();
    }
    ngOnChanges(changes) {
        this.makeCheckboxes();
    }
    /**
     * @description Create the internally used array of checkboxes
     */
    makeCheckboxes() {
        if (this.checkboxGroup) {
            this.checkboxes = this.checkboxGroup.map((item, index) => {
                return {
                    index: index,
                    id: `${item.value}_${index}`,
                    label: item.label,
                    value: item.value,
                    checked: item.checked || false,
                };
            });
        }
    }
    /**
     * @description Notify the parent that a value has changed
     * @param checked the new checked value of the checkbox
     * @param item the internal checkbox model
     */
    updateChecked(checked, item) {
        if (item.disabled) {
            return;
        }
        item.checked = checked;
        const toggledItem = this.checkboxGroup[item.index];
        if (toggledItem.hasOwnProperty('checked')) {
            toggledItem.checked = item.checked;
        }
        this.checkboxClicked.emit(toggledItem);
    }
}
CheckboxGridComponent.decorators = [
    { type: Component, args: [{
                selector: 'fj-checkbox-grid',
                template: "<h2 class=\"title\">Main Title</h2>\n<div class=\"grid-form__card-body card-body\" [ngClass]=\"{'no-padding': noPadding, 'no-margin': noMargin, 'small-text': smallText}\">\n  <div *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n    <div *ngFor=\"let checkbox of checkboxes;\" class=\"form-check\" [ngClass]=\"{'form-check--inline': inline}\">\n      <div class=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          [value]=\"checkbox.value\"\n          [ngModel]=\"checkbox.checked\"\n          (ngModelChange)=\"updateChecked($event, checkbox)\"\n          [disabled]=\"checkbox.disabled\"\n          [attr.id]=\"checkbox.id\"\n          [attr.name]=\"checkbox.id\" />\n        <label class=\"custom-control-label\" [attr.for]=\"checkbox.id\">{{checkbox.label}}</label>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!formGroup\" [ngClass]=\"{'no-border': noBorder}\">\n    <div *ngFor=\"let checkbox of checkboxes; \" class=\"form-check\" [ngClass]=\"{'form-check--inline': inline}\">\n      <div class=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          [value]=\"checkbox.value\"\n          [ngModel]=\"checkbox.checked\"\n          (ngModelChange)=\"updateChecked($event, checkbox)\"\n          [disabled]=\"checkbox.disabled\"\n          [attr.id]=\"checkbox.id\"\n          [attr.name]=\"checkbox.id\" />\n        <label class=\"custom-control-label\" [attr.for]=\"checkbox.id\">{{checkbox.label}}</label>\n      </div>\n    </div>\n  </div>\n</div>\n",
                styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}"]
            }] }
];
/** @nocollapse */
CheckboxGridComponent.ctorParameters = () => [];
CheckboxGridComponent.propDecorators = {
    title: [{ type: Input }],
    checkboxGroup: [{ type: Input }],
    inline: [{ type: Input }],
    noPadding: [{ type: Input }],
    noMargin: [{ type: Input }],
    smallText: [{ type: Input }],
    noBorder: [{ type: Input }],
    formGroup: [{ type: Input }],
    checkboxClicked: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mcmV5amEtdWkvIiwic291cmNlcyI6WyJsaWIvY2hlY2tib3gtZ3JpZC9jaGVja2JveC1ncmlkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUNqRyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFPM0MsTUFBTSxPQUFPLHFCQUFxQjtJQWlCaEM7UUFiUyxXQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2QsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFHakIsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTy9CLENBQUM7SUFFakIsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSyxjQUFjO1FBQ3BCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO2dCQUN2RCxPQUFPO29CQUNMLEtBQUssRUFBRSxLQUFLO29CQUNaLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxFQUFFO29CQUM1QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7b0JBQ2pCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztvQkFDakIsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLElBQUksS0FBSztpQkFDL0IsQ0FBQztZQUNKLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSTtRQUNoQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkQsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ3pDLFdBQVcsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNwQztRQUNELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7OztZQTVERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIscW1EQUE2Qzs7YUFFOUM7Ozs7O29CQUdFLEtBQUs7NEJBQ0wsS0FBSztxQkFDTCxLQUFLO3dCQUNMLEtBQUs7dUJBQ0wsS0FBSzt3QkFDTCxLQUFLO3VCQUNMLEtBQUs7d0JBQ0wsS0FBSzs4QkFDTCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmai1jaGVja2JveC1ncmlkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94LWdyaWQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jaGVja2JveC1ncmlkLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hHcmlkQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcblxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBjaGVja2JveEdyb3VwOiBhbnlbXTtcbiAgQElucHV0KCkgaW5saW5lID0gdHJ1ZTtcbiAgQElucHV0KCkgbm9QYWRkaW5nID0gZmFsc2U7XG4gIEBJbnB1dCgpIG5vTWFyZ2luID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNtYWxsVGV4dCA9IGZhbHNlO1xuICBASW5wdXQoKSBub0JvcmRlcjogYm9vbGVhbjtcbiAgQElucHV0KCkgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gIEBPdXRwdXQoKSBjaGVja2JveENsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBJbnRlcm5hbGx5IHVzZWQgY2hlY2tib3ggZGF0YVxuICAgKi9cbiAgcHVibGljIGNoZWNrYm94ZXM6IGFueVtdO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIHRoaXMubWFrZUNoZWNrYm94ZXMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gQ3JlYXRlIHRoZSBpbnRlcm5hbGx5IHVzZWQgYXJyYXkgb2YgY2hlY2tib3hlc1xuICAgKi9cbiAgcHJpdmF0ZSBtYWtlQ2hlY2tib3hlcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jaGVja2JveEdyb3VwKSB7XG4gICAgICB0aGlzLmNoZWNrYm94ZXMgPSB0aGlzLmNoZWNrYm94R3JvdXAubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgICAgICBpZDogYCR7aXRlbS52YWx1ZX1fJHtpbmRleH1gLFxuICAgICAgICAgIGxhYmVsOiBpdGVtLmxhYmVsLFxuICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLFxuICAgICAgICAgIGNoZWNrZWQ6IGl0ZW0uY2hlY2tlZCB8fCBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gTm90aWZ5IHRoZSBwYXJlbnQgdGhhdCBhIHZhbHVlIGhhcyBjaGFuZ2VkXG4gICAqIEBwYXJhbSBjaGVja2VkIHRoZSBuZXcgY2hlY2tlZCB2YWx1ZSBvZiB0aGUgY2hlY2tib3hcbiAgICogQHBhcmFtIGl0ZW0gdGhlIGludGVybmFsIGNoZWNrYm94IG1vZGVsXG4gICAqL1xuICBwdWJsaWMgdXBkYXRlQ2hlY2tlZChjaGVja2VkLCBpdGVtKTogdm9pZCB7XG4gICAgaWYgKGl0ZW0uZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaXRlbS5jaGVja2VkID0gY2hlY2tlZDtcbiAgICBjb25zdCB0b2dnbGVkSXRlbSA9IHRoaXMuY2hlY2tib3hHcm91cFtpdGVtLmluZGV4XTtcbiAgICBpZiAodG9nZ2xlZEl0ZW0uaGFzT3duUHJvcGVydHkoJ2NoZWNrZWQnKSkge1xuICAgICAgdG9nZ2xlZEl0ZW0uY2hlY2tlZCA9IGl0ZW0uY2hlY2tlZDtcbiAgICB9XG4gICAgdGhpcy5jaGVja2JveENsaWNrZWQuZW1pdCh0b2dnbGVkSXRlbSk7XG4gIH1cbn1cbiJdfQ==