import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '../shared/base.component';
import { FormGroup } from '@angular/forms';
let nextId = 0;
export class NativeDropdownComponent extends BaseComponent {
    constructor() {
        super();
        /**
         * options of the dropdown
         */
        this.options = [];
        /**
         * dropdown id
         */
        this.id = `fj-native-dd-${++nextId}`;
        /**
         * wether or not to show default value after selecting an option
         */
        this.showDefaultOnCLick = false;
        /**
         * event that is triggered when an option is selected
         */
        this.optionSelected = new EventEmitter();
    }
    /**
     * function triggered when an option is selected
     * @param evt - mouse click event
     */
    onOptionSelected(evt) {
        evt.stopPropagation();
        const dropdownElem = document.getElementById(this.id);
        this.optionSelected.emit(dropdownElem.value);
        if (this.showDefaultOnCLick) {
            // reselect default value
            dropdownElem.value = this.options[0].label;
        }
    }
    /**
     * @param evt - mouse click event
     */
    onDropdownClicked(evt) {
        evt.stopPropagation();
    }
    /**
     * @description Add css classes based on inputs like size, shape etc
     */
    generateClassList() {
        const baseCls = 'fj-native-dropdown--';
        const classes = {
            [baseCls + this.size]: this.size,
        };
        return classes;
    }
}
NativeDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'fj-native-dropdown',
                template: "<div [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n  <label\n    [attr.for]=\"id\"\n    class=\"label--medium\"\n    *ngIf=\"label\"\n  >{{label}}</label>\n  <select class=\"fj-native-dropdown\"\n          [ngClass]=\"generateClassList()\"\n          id=\"{{id}}\"\n          (click)=\"onDropdownClicked($event)\"\n          (change)=\"onOptionSelected($event)\"\n          [ngStyle]=\"customStyles\"\n          formControlName=\"{{controlName}}\"\n  >\n    <option *ngFor=\"let option of options\" [ngValue]=\"option.value\">{{option.label}}</option>\n  </select>\n</div>\n<!-- Input without reactive forms-->\n<div *ngIf=\"!formGroup\">\n  <label\n    [attr.for]=\"id\"\n    class=\"label--medium\"\n    *ngIf=\"label\"\n  >{{label}}</label>\n  <select class=\"fj-native-dropdown\"\n          id=\"{{id}}\"\n          [ngClass]=\"generateClassList()\"\n          (click)=\"onDropdownClicked($event)\"\n          (change)=\"onOptionSelected($event)\"\n          [ngStyle]=\"customStyles\"\n  >\n    <option *ngFor=\"let option of options\" value=\"{{option.value}}\">{{option.label}}</option>\n  </select>\n</div>\n",
                styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.fj-native-dropdown{-moz-appearance:none;-webkit-appearance:none;font-family:OpenSans,sans-serif;font-size:1rem;height:2.5rem;padding:0 .9375rem;background-color:#fff;color:#1b51a0;cursor:pointer}.fj-native-dropdown::-ms-expand{display:none}.fj-native-dropdown:hover{background-color:#f0f8ff}.fj-native-dropdown--large{font-size:1rem;height:3rem;line-height:1.25rem;padding:.875rem 1.25rem}.fj-native-dropdown--medium{font-size:.875rem;height:2.5rem;line-height:1.125rem;padding:.6875rem 1rem}.fj-native-dropdown--small{font-size:.75rem;height:2rem;line-height:1rem;padding:.5rem .75rem}.fj-native-dropdown--micro{font-size:.625rem;height:1.5rem;line-height:.75rem;padding:.375rem .5rem}label{cursor:pointer;font-size:.875rem}label.label--medium{font-size:.75rem;padding-left:.5em}label.label--disabled{color:rgba(0,0,0,.2)}"]
            }] }
];
/** @nocollapse */
NativeDropdownComponent.ctorParameters = () => [];
NativeDropdownComponent.propDecorators = {
    options: [{ type: Input }],
    id: [{ type: Input }],
    width: [{ type: Input }],
    showDefaultOnCLick: [{ type: Input }],
    optionSelected: [{ type: Output }],
    error: [{ type: Input }],
    controlName: [{ type: Input }],
    formGroup: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2ZyZXlqYS11aS8iLCJzb3VyY2VzIjpbImxpYi9uYXRpdmUtZHJvcGRvd24vbmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFekMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBT2YsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGFBQWE7SUFrQ3hEO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFsQ1Y7O1dBRUc7UUFDTSxZQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ3RCOztXQUVHO1FBQ00sT0FBRSxHQUFHLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxDQUFDO1FBS3pDOztXQUVHO1FBQ00sdUJBQWtCLEdBQUcsS0FBSyxDQUFDO1FBQ3BDOztXQUVHO1FBQ08sbUJBQWMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWdCakUsQ0FBQztJQUVEOzs7T0FHRztJQUNILGdCQUFnQixDQUFDLEdBQUc7UUFDbEIsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3RCLE1BQU0sWUFBWSxHQUFRLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtZQUMzQix5QkFBeUI7WUFDekIsWUFBWSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztTQUM1QztJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILGlCQUFpQixDQUFDLEdBQUc7UUFDbkIsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7T0FFRztJQUNJLGlCQUFpQjtRQUN0QixNQUFNLE9BQU8sR0FBRyxzQkFBc0IsQ0FBQztRQUN2QyxNQUFNLE9BQU8sR0FBRztZQUNkLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNqQyxDQUFDO1FBQ0YsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQzs7O1lBekVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QiwwbUNBQStDOzthQUVoRDs7Ozs7c0JBS0UsS0FBSztpQkFJTCxLQUFLO29CQUlMLEtBQUs7aUNBSUwsS0FBSzs2QkFJTCxNQUFNO29CQUlOLEtBQUs7MEJBSUwsS0FBSzt3QkFJTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QmFzZUNvbXBvbmVudH0gZnJvbSAnLi4vc2hhcmVkL2Jhc2UuY29tcG9uZW50JztcbmltcG9ydCB7Rm9ybUdyb3VwfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmxldCBuZXh0SWQgPSAwO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmai1uYXRpdmUtZHJvcGRvd24nLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTmF0aXZlRHJvcGRvd25Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIG9wdGlvbnMgb2YgdGhlIGRyb3Bkb3duXG4gICAqL1xuICBASW5wdXQoKSBvcHRpb25zID0gW107XG4gIC8qKlxuICAgKiBkcm9wZG93biBpZFxuICAgKi9cbiAgQElucHV0KCkgaWQgPSBgZmotbmF0aXZlLWRkLSR7KytuZXh0SWR9YDtcbiAgLyoqXG4gICAqIGRyb3Bkb3duIHdpZHRoXG4gICAqL1xuICBASW5wdXQoKSB3aWR0aDogc3RyaW5nO1xuICAvKipcbiAgICogd2V0aGVyIG9yIG5vdCB0byBzaG93IGRlZmF1bHQgdmFsdWUgYWZ0ZXIgc2VsZWN0aW5nIGFuIG9wdGlvblxuICAgKi9cbiAgQElucHV0KCkgc2hvd0RlZmF1bHRPbkNMaWNrID0gZmFsc2U7XG4gIC8qKlxuICAgKiBldmVudCB0aGF0IGlzIHRyaWdnZXJlZCB3aGVuIGFuIG9wdGlvbiBpcyBzZWxlY3RlZFxuICAgKi9cbiAgQE91dHB1dCgpIG9wdGlvblNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgLyoqXG4gICAqIEVycm9yIE1lc3NhZ2UgdG8gYmUgZGlzcGxheWVkXG4gICAqL1xuICBASW5wdXQoKSBlcnJvcjogc3RyaW5nO1xuICAvKipcbiAgICogcmVhY3RpdmUgZm9ybSBjb250cm9sIG5hbWVcbiAgICovXG4gIEBJbnB1dCgpIGNvbnRyb2xOYW1lOiBzdHJpbmc7XG4gIC8qKlxuICAgKiByZWFjdGl2ZSBmb3JtIGdyb3VwXG4gICAqL1xuICBASW5wdXQoKSBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIGZ1bmN0aW9uIHRyaWdnZXJlZCB3aGVuIGFuIG9wdGlvbiBpcyBzZWxlY3RlZFxuICAgKiBAcGFyYW0gZXZ0IC0gbW91c2UgY2xpY2sgZXZlbnRcbiAgICovXG4gIG9uT3B0aW9uU2VsZWN0ZWQoZXZ0KSB7XG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGNvbnN0IGRyb3Bkb3duRWxlbTogYW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5pZCk7XG4gICAgdGhpcy5vcHRpb25TZWxlY3RlZC5lbWl0KGRyb3Bkb3duRWxlbS52YWx1ZSk7XG4gICAgaWYgKHRoaXMuc2hvd0RlZmF1bHRPbkNMaWNrKSB7XG4gICAgICAvLyByZXNlbGVjdCBkZWZhdWx0IHZhbHVlXG4gICAgICBkcm9wZG93bkVsZW0udmFsdWUgPSB0aGlzLm9wdGlvbnNbMF0ubGFiZWw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBldnQgLSBtb3VzZSBjbGljayBldmVudFxuICAgKi9cbiAgb25Ecm9wZG93bkNsaWNrZWQoZXZ0KSB7XG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBBZGQgY3NzIGNsYXNzZXMgYmFzZWQgb24gaW5wdXRzIGxpa2Ugc2l6ZSwgc2hhcGUgZXRjXG4gICAqL1xuICBwdWJsaWMgZ2VuZXJhdGVDbGFzc0xpc3QoKSB7XG4gICAgY29uc3QgYmFzZUNscyA9ICdmai1uYXRpdmUtZHJvcGRvd24tLSc7XG4gICAgY29uc3QgY2xhc3NlcyA9IHtcbiAgICAgIFtiYXNlQ2xzICsgdGhpcy5zaXplXTogdGhpcy5zaXplLFxuICAgIH07XG4gICAgcmV0dXJuIGNsYXNzZXM7XG4gIH1cblxufVxuIl19