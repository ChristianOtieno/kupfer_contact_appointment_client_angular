import * as tslib_1 from "tslib";
// Angular Imports
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';
// Internal Imports
import { BaseComponent } from '../shared/base.component';
/**
 * Count for Next Id
 */
var nextId = 0;
/**
 * Freyja Number Input Component according to specifics of Freyja Design
 */
var NumberInputComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NumberInputComponent, _super);
    function NumberInputComponent() {
        var _this = _super.call(this) || this;
        // This is to make component controlled
        _this.inputValue = '';
        /**
         * Provide unique ID or it will use auto generated from counter
         */
        _this.id = "fj-number-input-" + ++nextId;
        /**
         * Allow applying forceful error state of input
         */
        _this.errored = false;
        /**
         * On change event hook, which will be emitted on value change
         */
        _this.change = new EventEmitter();
        return _this;
    }
    /**
     * Capture value change ang emit on change event callback
     * @param event HTML onChange Event
     */
    NumberInputComponent.prototype.onValueChange = function (event) {
        event.stopPropagation();
        this.inputValue = event.target.value;
        this.change.emit(this.inputValue);
    };
    /**
     * Generate classes using BEM appraoch and bind to ngClass
     */
    NumberInputComponent.prototype.generateClassList = function () {
        var _a;
        var classes = (_a = {},
            _a['fj-number-input--' + this.size] = this.size,
            _a['fj-number-input--error'] = this.errored,
            _a);
        return classes;
    };
    NumberInputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fj-number-input',
                    template: "<label [attr.for]=\"id\" class=\"label--medium\">{{label}}</label>\n<input \n  class=\"fj-input\"\n  [ngClass]=\"generateClassList()\"\n  type=\"number\" \n  [id]=\"id\"\n  [tabIndex]=\"tabIndex\"\n  [disabled]=\"disabled\"\n  [attr.name]=\"name\" \n  [placeholder]=\"placeholder\"\n  [attr.value]=\"value\"\n  (change)=\"onValueChange($event)\"\n/>",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.fj-input input{box-sizing:border-box;border:.0625rem solid rgba(0,0,0,.15);border-radius:.25rem;color:#000;display:block;font-size:.95rem;font-weight:500;height:2.5rem;margin-top:.25em;outline:0;padding:.5625rem .75rem;transition:.2s linear}.fj-input input:focus{border-color:#1b51a0}.fj-input input:hover{color:rgba(0,0,0,.6)}.fj-input input::-webkit-input-placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-input input::-ms-input-placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-input input::placeholder{color:rgba(0,0,0,.6);font-weight:100}.fj-input input::-webkit-input-placeholder:hover .fj-input input::-webkit-input-placeholder{color:rgba(0,0,0,.6)}.fj-input input::-ms-input-placeholder:hover .fj-input input::-ms-input-placeholder{color:rgba(0,0,0,.6)}.fj-input input::placeholder:hover .fj-input input::placeholder{color:rgba(0,0,0,.6)}.fj-input input:disabled{background-color:#f2f2f2;border-color:#f2f2f2;cursor:not-allowed}.fj-input input:disabled::-webkit-input-placeholder{color:rgba(0,0,0,.2)}.fj-input input:disabled::-ms-input-placeholder{color:rgba(0,0,0,.2)}.fj-input input:disabled::placeholder{color:rgba(0,0,0,.2)}.fj-input input--small{height:2rem;font-size:.875rem;padding:.5625rem .625rem}.fj-input input--micro{height:1.5rem;font-size:.75rem;padding:.5625rem .5rem}.fj-input input--required:after{content:\" *\"}.fj-input--error input{border-color:#db0000}label{cursor:pointer;font-size:.875rem}label.label--medium{font-size:.75rem}label.label--disabled{color:rgba(0,0,0,.2)}.input-error{color:#db0000;font-size:.75rem;padding:.5em}.error--label{font-size:.75rem;padding-left:.5em;color:#db0000}"]
                }] }
    ];
    /** @nocollapse */
    NumberInputComponent.ctorParameters = function () { return []; };
    NumberInputComponent.propDecorators = {
        id: [{ type: Input }],
        value: [{ type: Input }],
        errored: [{ type: Input }],
        change: [{ type: Output }]
    };
    return NumberInputComponent;
}(BaseComponent));
export { NumberInputComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2ZyZXlqYS11aS8iLCJzb3VyY2VzIjpbImxpYi9udW1iZXItaW5wdXQvbnVtYmVyLWlucHV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsa0JBQWtCO0FBQ2xCLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUYsbUJBQW1CO0FBQ25CLE9BQU8sRUFBRSxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUV4RDs7R0FFRztBQUNILElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztBQUdmOztHQUVHO0FBQ0g7SUFNMEMsZ0RBQWE7SUF5QnJEO1FBQUEsWUFDRSxpQkFBTyxTQUNQO1FBekJGLHVDQUF1QztRQUMvQixnQkFBVSxHQUFHLEVBQUUsQ0FBQztRQUV4Qjs7V0FFRztRQUNNLFFBQUUsR0FBRyxxQkFBbUIsRUFBRSxNQUFRLENBQUM7UUFPNUM7O1dBRUc7UUFDTSxhQUFPLEdBQUcsS0FBSyxDQUFDO1FBRXpCOztXQUVHO1FBQ08sWUFBTSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDOztJQUk3RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0osNENBQWEsR0FBYixVQUFjLEtBQVk7UUFDeEIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQXNCLEtBQUssQ0FBQyxNQUFPLENBQUMsS0FBSyxDQUFDO1FBQ3pELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBR0Q7O09BRUc7SUFDSSxnREFBaUIsR0FBeEI7O1FBQ0UsSUFBTSxPQUFPO1lBQ1gsR0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFHLElBQUksQ0FBQyxJQUFJO1lBQzVDLEdBQUMsd0JBQXdCLElBQUcsSUFBSSxDQUFDLE9BQU87ZUFDekMsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7O2dCQXZERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IseVdBQTRDO29CQUU1QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3RDOzs7OztxQkFTRSxLQUFLO3dCQUtMLEtBQUs7MEJBS0wsS0FBSzt5QkFLTCxNQUFNOztJQTRCVCwyQkFBQztDQUFBLEFBekRELENBTTBDLGFBQWEsR0FtRHREO1NBbkRZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFuZ3VsYXIgSW1wb3J0c1xuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8vIEludGVybmFsIEltcG9ydHNcbmltcG9ydCB7IEJhc2VDb21wb25lbnR9IGZyb20gJy4uL3NoYXJlZC9iYXNlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQ291bnQgZm9yIE5leHQgSWRcbiAqL1xubGV0IG5leHRJZCA9IDA7XG5cblxuLyoqXG4gKiBGcmV5amEgTnVtYmVyIElucHV0IENvbXBvbmVudCBhY2NvcmRpbmcgdG8gc3BlY2lmaWNzIG9mIEZyZXlqYSBEZXNpZ25cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmotbnVtYmVyLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL251bWJlci1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL251bWJlci1pbnB1dC5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBOdW1iZXJJbnB1dENvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuXG4gIC8vIFRoaXMgaXMgdG8gbWFrZSBjb21wb25lbnQgY29udHJvbGxlZFxuICBwcml2YXRlIGlucHV0VmFsdWUgPSAnJztcblxuICAvKipcbiAgICogUHJvdmlkZSB1bmlxdWUgSUQgb3IgaXQgd2lsbCB1c2UgYXV0byBnZW5lcmF0ZWQgZnJvbSBjb3VudGVyXG4gICAqL1xuICBASW5wdXQoKSBpZCA9IGBmai1udW1iZXItaW5wdXQtJHsrK25leHRJZH1gO1xuXG4gIC8qKlxuICAgKiBQcm92aWRlIHZhbHVlIHRvIGJlIGRpc3BsYXllZCBpbiBpbnB1dFxuICAgKi9cbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZztcblxuICAvKipcbiAgICogQWxsb3cgYXBwbHlpbmcgZm9yY2VmdWwgZXJyb3Igc3RhdGUgb2YgaW5wdXRcbiAgICovXG4gIEBJbnB1dCgpIGVycm9yZWQgPSBmYWxzZTtcblxuICAvKipcbiAgICogT24gY2hhbmdlIGV2ZW50IGhvb2ssIHdoaWNoIHdpbGwgYmUgZW1pdHRlZCBvbiB2YWx1ZSBjaGFuZ2VcbiAgICovXG4gIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgIH1cblxuICAgLyoqXG4gICAgKiBDYXB0dXJlIHZhbHVlIGNoYW5nZSBhbmcgZW1pdCBvbiBjaGFuZ2UgZXZlbnQgY2FsbGJhY2tcbiAgICAqIEBwYXJhbSBldmVudCBIVE1MIG9uQ2hhbmdlIEV2ZW50XG4gICAgKi9cbiAgb25WYWx1ZUNoYW5nZShldmVudDogRXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLmlucHV0VmFsdWUgPSAoPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0KS52YWx1ZTtcbiAgICB0aGlzLmNoYW5nZS5lbWl0KHRoaXMuaW5wdXRWYWx1ZSk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBHZW5lcmF0ZSBjbGFzc2VzIHVzaW5nIEJFTSBhcHByYW9jaCBhbmQgYmluZCB0byBuZ0NsYXNzXG4gICAqL1xuICBwdWJsaWMgZ2VuZXJhdGVDbGFzc0xpc3QoKSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHtcbiAgICAgIFsnZmotbnVtYmVyLWlucHV0LS0nICsgdGhpcy5zaXplXTogdGhpcy5zaXplLFxuICAgICAgWydmai1udW1iZXItaW5wdXQtLWVycm9yJ106IHRoaXMuZXJyb3JlZCxcbiAgICB9O1xuICAgIHJldHVybiBjbGFzc2VzO1xuICB9XG5cbn1cbiJdfQ==