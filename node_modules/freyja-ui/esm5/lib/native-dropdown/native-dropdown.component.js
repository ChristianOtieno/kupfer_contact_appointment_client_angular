import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '../shared/base.component';
import { FormGroup } from '@angular/forms';
var nextId = 0;
var NativeDropdownComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NativeDropdownComponent, _super);
    function NativeDropdownComponent() {
        var _this = _super.call(this) || this;
        /**
         * options of the dropdown
         */
        _this.options = [];
        /**
         * dropdown id
         */
        _this.id = "fj-native-dd-" + ++nextId;
        /**
         * wether or not to show default value after selecting an option
         */
        _this.showDefaultOnCLick = false;
        /**
         * event that is triggered when an option is selected
         */
        _this.optionSelected = new EventEmitter();
        return _this;
    }
    /**
     * function triggered when an option is selected
     * @param evt - mouse click event
     */
    NativeDropdownComponent.prototype.onOptionSelected = function (evt) {
        evt.stopPropagation();
        var dropdownElem = document.getElementById(this.id);
        this.optionSelected.emit(dropdownElem.value);
        if (this.showDefaultOnCLick) {
            // reselect default value
            dropdownElem.value = this.options[0].label;
        }
    };
    /**
     * @param evt - mouse click event
     */
    NativeDropdownComponent.prototype.onDropdownClicked = function (evt) {
        evt.stopPropagation();
    };
    /**
     * @description Add css classes based on inputs like size, shape etc
     */
    NativeDropdownComponent.prototype.generateClassList = function () {
        var _a;
        var baseCls = 'fj-native-dropdown--';
        var classes = (_a = {},
            _a[baseCls + this.size] = this.size,
            _a);
        return classes;
    };
    NativeDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fj-native-dropdown',
                    template: "<div [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n  <label\n    [attr.for]=\"id\"\n    class=\"label--medium\"\n    *ngIf=\"label\"\n  >{{label}}</label>\n  <select class=\"fj-native-dropdown\"\n          [ngClass]=\"generateClassList()\"\n          id=\"{{id}}\"\n          (click)=\"onDropdownClicked($event)\"\n          (change)=\"onOptionSelected($event)\"\n          [ngStyle]=\"customStyles\"\n          formControlName=\"{{controlName}}\"\n  >\n    <option *ngFor=\"let option of options\" [ngValue]=\"option.value\">{{option.label}}</option>\n  </select>\n</div>\n<!-- Input without reactive forms-->\n<div *ngIf=\"!formGroup\">\n  <label\n    [attr.for]=\"id\"\n    class=\"label--medium\"\n    *ngIf=\"label\"\n  >{{label}}</label>\n  <select class=\"fj-native-dropdown\"\n          id=\"{{id}}\"\n          [ngClass]=\"generateClassList()\"\n          (click)=\"onDropdownClicked($event)\"\n          (change)=\"onOptionSelected($event)\"\n          [ngStyle]=\"customStyles\"\n  >\n    <option *ngFor=\"let option of options\" value=\"{{option.value}}\">{{option.label}}</option>\n  </select>\n</div>\n",
                    styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.fj-native-dropdown{-moz-appearance:none;-webkit-appearance:none;font-family:OpenSans,sans-serif;font-size:1rem;height:2.5rem;padding:0 .9375rem;background-color:#fff;color:#1b51a0;cursor:pointer}.fj-native-dropdown::-ms-expand{display:none}.fj-native-dropdown:hover{background-color:#f0f8ff}.fj-native-dropdown--large{font-size:1rem;height:3rem;line-height:1.25rem;padding:.875rem 1.25rem}.fj-native-dropdown--medium{font-size:.875rem;height:2.5rem;line-height:1.125rem;padding:.6875rem 1rem}.fj-native-dropdown--small{font-size:.75rem;height:2rem;line-height:1rem;padding:.5rem .75rem}.fj-native-dropdown--micro{font-size:.625rem;height:1.5rem;line-height:.75rem;padding:.375rem .5rem}label{cursor:pointer;font-size:.875rem}label.label--medium{font-size:.75rem;padding-left:.5em}label.label--disabled{color:rgba(0,0,0,.2)}"]
                }] }
    ];
    /** @nocollapse */
    NativeDropdownComponent.ctorParameters = function () { return []; };
    NativeDropdownComponent.propDecorators = {
        options: [{ type: Input }],
        id: [{ type: Input }],
        width: [{ type: Input }],
        showDefaultOnCLick: [{ type: Input }],
        optionSelected: [{ type: Output }],
        error: [{ type: Input }],
        controlName: [{ type: Input }],
        formGroup: [{ type: Input }]
    };
    return NativeDropdownComponent;
}(BaseComponent));
export { NativeDropdownComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2ZyZXlqYS11aS8iLCJzb3VyY2VzIjpbImxpYi9uYXRpdmUtZHJvcGRvd24vbmF0aXZlLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXpDLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztBQUVmO0lBSzZDLG1EQUFhO0lBa0N4RDtRQUFBLFlBQ0UsaUJBQU8sU0FDUjtRQW5DRDs7V0FFRztRQUNNLGFBQU8sR0FBRyxFQUFFLENBQUM7UUFDdEI7O1dBRUc7UUFDTSxRQUFFLEdBQUcsa0JBQWdCLEVBQUUsTUFBUSxDQUFDO1FBS3pDOztXQUVHO1FBQ00sd0JBQWtCLEdBQUcsS0FBSyxDQUFDO1FBQ3BDOztXQUVHO1FBQ08sb0JBQWMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7SUFnQmpFLENBQUM7SUFFRDs7O09BR0c7SUFDSCxrREFBZ0IsR0FBaEIsVUFBaUIsR0FBRztRQUNsQixHQUFHLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdEIsSUFBTSxZQUFZLEdBQVEsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLElBQUksSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzNCLHlCQUF5QjtZQUN6QixZQUFZLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1NBQzVDO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsbURBQWlCLEdBQWpCLFVBQWtCLEdBQUc7UUFDbkIsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7T0FFRztJQUNJLG1EQUFpQixHQUF4Qjs7UUFDRSxJQUFNLE9BQU8sR0FBRyxzQkFBc0IsQ0FBQztRQUN2QyxJQUFNLE9BQU87WUFDWCxHQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFHLElBQUksQ0FBQyxJQUFJO2VBQ2pDLENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOztnQkF6RUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDBtQ0FBK0M7O2lCQUVoRDs7Ozs7MEJBS0UsS0FBSztxQkFJTCxLQUFLO3dCQUlMLEtBQUs7cUNBSUwsS0FBSztpQ0FJTCxNQUFNO3dCQUlOLEtBQUs7OEJBSUwsS0FBSzs0QkFJTCxLQUFLOztJQXNDUiw4QkFBQztDQUFBLEFBM0VELENBSzZDLGFBQWEsR0FzRXpEO1NBdEVZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJy4uL3NoYXJlZC9iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQge0Zvcm1Hcm91cH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5sZXQgbmV4dElkID0gMDtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmotbmF0aXZlLWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25hdGl2ZS1kcm9wZG93bi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdGl2ZS1kcm9wZG93bi5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE5hdGl2ZURyb3Bkb3duQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBvcHRpb25zIG9mIHRoZSBkcm9wZG93blxuICAgKi9cbiAgQElucHV0KCkgb3B0aW9ucyA9IFtdO1xuICAvKipcbiAgICogZHJvcGRvd24gaWRcbiAgICovXG4gIEBJbnB1dCgpIGlkID0gYGZqLW5hdGl2ZS1kZC0keysrbmV4dElkfWA7XG4gIC8qKlxuICAgKiBkcm9wZG93biB3aWR0aFxuICAgKi9cbiAgQElucHV0KCkgd2lkdGg6IHN0cmluZztcbiAgLyoqXG4gICAqIHdldGhlciBvciBub3QgdG8gc2hvdyBkZWZhdWx0IHZhbHVlIGFmdGVyIHNlbGVjdGluZyBhbiBvcHRpb25cbiAgICovXG4gIEBJbnB1dCgpIHNob3dEZWZhdWx0T25DTGljayA9IGZhbHNlO1xuICAvKipcbiAgICogZXZlbnQgdGhhdCBpcyB0cmlnZ2VyZWQgd2hlbiBhbiBvcHRpb24gaXMgc2VsZWN0ZWRcbiAgICovXG4gIEBPdXRwdXQoKSBvcHRpb25TZWxlY3RlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIC8qKlxuICAgKiBFcnJvciBNZXNzYWdlIHRvIGJlIGRpc3BsYXllZFxuICAgKi9cbiAgQElucHV0KCkgZXJyb3I6IHN0cmluZztcbiAgLyoqXG4gICAqIHJlYWN0aXZlIGZvcm0gY29udHJvbCBuYW1lXG4gICAqL1xuICBASW5wdXQoKSBjb250cm9sTmFtZTogc3RyaW5nO1xuICAvKipcbiAgICogcmVhY3RpdmUgZm9ybSBncm91cFxuICAgKi9cbiAgQElucHV0KCkgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBmdW5jdGlvbiB0cmlnZ2VyZWQgd2hlbiBhbiBvcHRpb24gaXMgc2VsZWN0ZWRcbiAgICogQHBhcmFtIGV2dCAtIG1vdXNlIGNsaWNrIGV2ZW50XG4gICAqL1xuICBvbk9wdGlvblNlbGVjdGVkKGV2dCkge1xuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBjb25zdCBkcm9wZG93bkVsZW06IGFueSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpO1xuICAgIHRoaXMub3B0aW9uU2VsZWN0ZWQuZW1pdChkcm9wZG93bkVsZW0udmFsdWUpO1xuICAgIGlmICh0aGlzLnNob3dEZWZhdWx0T25DTGljaykge1xuICAgICAgLy8gcmVzZWxlY3QgZGVmYXVsdCB2YWx1ZVxuICAgICAgZHJvcGRvd25FbGVtLnZhbHVlID0gdGhpcy5vcHRpb25zWzBdLmxhYmVsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0gZXZ0IC0gbW91c2UgY2xpY2sgZXZlbnRcbiAgICovXG4gIG9uRHJvcGRvd25DbGlja2VkKGV2dCkge1xuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gQWRkIGNzcyBjbGFzc2VzIGJhc2VkIG9uIGlucHV0cyBsaWtlIHNpemUsIHNoYXBlIGV0Y1xuICAgKi9cbiAgcHVibGljIGdlbmVyYXRlQ2xhc3NMaXN0KCkge1xuICAgIGNvbnN0IGJhc2VDbHMgPSAnZmotbmF0aXZlLWRyb3Bkb3duLS0nO1xuICAgIGNvbnN0IGNsYXNzZXMgPSB7XG4gICAgICBbYmFzZUNscyArIHRoaXMuc2l6ZV06IHRoaXMuc2l6ZSxcbiAgICB9O1xuICAgIHJldHVybiBjbGFzc2VzO1xuICB9XG5cbn1cbiJdfQ==