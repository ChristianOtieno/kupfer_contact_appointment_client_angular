import { Component, ViewChild, ViewEncapsulation, EventEmitter, Output, Input } from '@angular/core';
import { DropzoneComponent, DropzoneDirective } from 'ngx-dropzone-wrapper';
var FjDragAndDropComponent = /** @class */ (function () {
    function FjDragAndDropComponent() {
        this.uploadedDoc = new EventEmitter();
        this.fileToUpload = new EventEmitter();
        this.disabled = false;
        this.showPlaceholder = true;
        this.dropZoneconfig = {
            clickable: '.trigger-upload',
            maxFiles: 1,
            autoReset: null,
            errorReset: null,
            cancelReset: null,
            uploadMultiple: false
        };
    }
    FjDragAndDropComponent.prototype.ngOnInit = function () { };
    FjDragAndDropComponent.prototype.ngOnChanges = function (changes) {
        this.getParentChanges(changes);
    };
    /**
     * @description called on upload error
     * @param args
     */
    FjDragAndDropComponent.prototype.onUploadError = function (args) {
        this.disabled = true;
        return;
    };
    /**
     * @description on drag-start event
     * @param event
     */
    FjDragAndDropComponent.prototype.onFileAdded = function (file) {
        var _this = this;
        this.uploadedFile = file;
        var reader = new FileReader();
        reader.onload = function (event) {
            // event.target.result contains base64 encoded file
            _this.fileToUpload.emit(reader.result);
        };
        try {
            reader.readAsDataURL(file);
        }
        catch (error) { }
        this.uploadedDoc.emit(file);
        this.showPlaceholder = false;
    };
    /**
     * @description - called on file removed from drag-drop area
     * @description - emits null to the parent
     * @param event
     */
    FjDragAndDropComponent.prototype.onFileRemoved = function (event) {
        this.fileToUpload.emit(null);
        this.showPlaceholder = true;
        this.disabled = false;
    };
    /**
     * @description - resets drag-drop area on form submit and modal close events
     * @description - sets showPlaceholder value to (true/false) to position the drop container
     * @param {object} changes - object of type SimpleChanges
     */
    FjDragAndDropComponent.prototype.getParentChanges = function (changes) {
        if (changes.removeFile && changes.removeFile.currentValue) {
            // clear dropzone
            if (this.directiveRef) {
                this.directiveRef.reset();
            }
            this.showPlaceholder = true;
        }
        // Diplay error message if a form is submitted without selecting a file
        if (changes.noFileSelected &&
            changes.noFileSelected.currentValue === true) {
            this.noFileSelected = true;
        }
        else {
            this.noFileSelected = false;
        }
    };
    FjDragAndDropComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fj-drag-and-drop',
                    template: "<div class=\"dropzone drag-drop\">\n    <div *ngIf=\"noFileSelected && showPlaceholder\">\n        <p class=\"drag-drop__file-missing\">No file is selected</p>\n    </div>\n    <div\n        class=\"dropzone-container trigger-upload\"\n        [dropzone]=\"dropZoneconfig\"\n        [disabled]=\"disabled\"\n        (error)=\"onUploadError($event)\"\n        (addedFile)=\"onFileAdded($event)\"\n        (removedFile)=\"onFileRemoved($event)\"\n    >\n        <div class=\"dropzone-container__placeholder trigger-upload\">\n            <i class=\"dropzone-container__icon-upload icon-document-upload\"></i>\n            <p class=\"dropzone-container__label-dragdrop\">\n               Drag and Drop\n            </p>\n            <p class=\"dropzone-container__label-or\">\n                or\n            </p>\n          <fj-button\n            [icon]=\"'plus'\"\n            [iconMargin]=\"'0 5px 0px 0px'\"\n            [margin]=\"'0px'\"\n            [ghost]=\"true\"\n            [size]=\"'med'\"\n          >\n            Choose a local file\n          </fj-button>\n        </div>\n    </div>\n    <div class=\"drag-drop__updload-info\">\n        <fj-icon svgName=\"attachment\"\n                 fillColor=\"black\" class=\"drag-drop__updload-info-icon\"></fj-icon>\n        <span>Maximum file size is 20MB</span>\n    </div>\n</div>\n\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.drag-drop{display:flex;flex-direction:column;background-color:#f2f2f2;height:100%;width:100%;padding:1.75rem;box-sizing:border-box}.drag-drop__icon-right{float:right}.drag-drop__icon-right:hover{cursor:pointer}.drag-drop__file-missing{color:#db0000}.drag-drop__updload-info{display:inline-flex;align-items:center;margin-top:1.5625rem;font-size:.875rem;color:rgba(0,0,0,.45)}.drag-drop__updload-info-icon{margin-right:.4375rem}.dropzone-container{flex:1;justify-content:center;align-items:center;overflow:hidden;display:flex;position:relative;width:100%;cursor:pointer;background-color:rgba(0,0,0,.02);border:.0625rem dashed #f2f2f2;border-radius:.25rem;box-sizing:border-box;padding:.3125rem;text-align:center;line-height:.8125rem;transition:.3s}.dropzone-container span{display:block}.dropzone-container__icon-upload{font-size:2.5rem;color:#f2f2f2}.dropzone-container__placeholder{display:block;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}.dropzone-container__label-dragdrop{margin-top:1.5625rem;color:rgba(0,0,0,.6)}.dropzone-container__label-or{color:rgba(0,0,0,.6)}.dropzone-container__btn-icon{margin-right:.5rem}.dropzone-container:hover{border:.0625rem dashed #1b51a0;background-color:#dce8f9}.dropzone-container:hover .dropzone-container__icon-upload{color:#1b51a0}.dropzone-container.dz-drag-hover{border:.0625rem solid #1b51a0;background-color:#dce8f9}.dropzone-container.dz-drag-hover .dropzone-container__placeholder{-webkit-transform:scale(.95);transform:scale(.95)}.dropzone-container.dz-drag-hover i{color:#1b51a0}"]
                }] }
    ];
    /** @nocollapse */
    FjDragAndDropComponent.ctorParameters = function () { return []; };
    FjDragAndDropComponent.propDecorators = {
        componentRef: [{ type: ViewChild, args: [DropzoneComponent,] }],
        directiveRef: [{ type: ViewChild, args: [DropzoneDirective,] }],
        uploadedDoc: [{ type: Output }],
        fileToUpload: [{ type: Output }],
        removeFile: [{ type: Input }],
        noFileSelected: [{ type: Input }]
    };
    return FjDragAndDropComponent;
}());
export { FjDragAndDropComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1hbmQtZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mcmV5amEtdWkvIiwic291cmNlcyI6WyJsaWIvZHJhZy1hbmQtZHJvcC9kcmFnLWFuZC1kcm9wLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULFNBQVMsRUFDVCxpQkFBaUIsRUFDakIsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBR04sTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixpQkFBaUIsRUFFbEIsTUFBTSxzQkFBc0IsQ0FBQztBQUU5QjtJQTJCRTtRQWpCVSxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3BELGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFHeEQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixvQkFBZSxHQUFHLElBQUksQ0FBQztRQUd2QixtQkFBYyxHQUE0QjtZQUMvQyxTQUFTLEVBQUUsaUJBQWlCO1lBQzVCLFFBQVEsRUFBRSxDQUFDO1lBQ1gsU0FBUyxFQUFFLElBQUk7WUFDZixVQUFVLEVBQUUsSUFBSTtZQUNoQixXQUFXLEVBQUUsSUFBSTtZQUNqQixjQUFjLEVBQUUsS0FBSztTQUN0QixDQUFDO0lBRWEsQ0FBQztJQUVoQix5Q0FBUSxHQUFSLGNBQVksQ0FBQztJQUViLDRDQUFXLEdBQVgsVUFBWSxPQUFzQjtRQUNoQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOzs7T0FHRztJQUNJLDhDQUFhLEdBQXBCLFVBQXFCLElBQVM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsT0FBTztJQUNULENBQUM7SUFFRDs7O09BR0c7SUFDSSw0Q0FBVyxHQUFsQixVQUFtQixJQUFJO1FBQXZCLGlCQVlDO1FBWEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUNoQyxNQUFNLENBQUMsTUFBTSxHQUFHLFVBQUMsS0FBSztZQUNwQixtREFBbUQ7WUFDbkQsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQztRQUNGLElBQUk7WUFDRixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzVCO1FBQUMsT0FBTyxLQUFLLEVBQUUsR0FBRTtRQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLDhDQUFhLEdBQXBCLFVBQXFCLEtBQUs7UUFDeEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxpREFBZ0IsR0FBdkIsVUFBd0IsT0FBTztRQUM3QixJQUFJLE9BQU8sQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQUU7WUFDekQsaUJBQWlCO1lBQ2pCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtnQkFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUMzQjtZQUNELElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1NBQzdCO1FBQ0QsdUVBQXVFO1FBQ3ZFLElBQ0UsT0FBTyxDQUFDLGNBQWM7WUFDdEIsT0FBTyxDQUFDLGNBQWMsQ0FBQyxZQUFZLEtBQUssSUFBSSxFQUM1QztZQUNBLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1NBQzVCO2FBQU07WUFDTCxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztTQUM3QjtJQUNILENBQUM7O2dCQS9GRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsNjBDQUE2QztvQkFFN0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2lCQUN0Qzs7Ozs7K0JBRUUsU0FBUyxTQUFDLGlCQUFpQjsrQkFDM0IsU0FBUyxTQUFDLGlCQUFpQjs4QkFFM0IsTUFBTTsrQkFDTixNQUFNOzZCQUNOLEtBQUs7aUNBQ0wsS0FBSzs7SUFtRlIsNkJBQUM7Q0FBQSxBQWhHRCxJQWdHQztTQTFGWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgVmlld0NoaWxkLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgRXZlbnRFbWl0dGVyLFxuICBPdXRwdXQsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIFNpbXBsZUNoYW5nZXNcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIERyb3B6b25lQ29tcG9uZW50LFxuICBEcm9wem9uZURpcmVjdGl2ZSxcbiAgRHJvcHpvbmVDb25maWdJbnRlcmZhY2Vcbn0gZnJvbSAnbmd4LWRyb3B6b25lLXdyYXBwZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmai1kcmFnLWFuZC1kcm9wJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RyYWctYW5kLWRyb3AuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kcmFnLWFuZC1kcm9wLmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgRmpEcmFnQW5kRHJvcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQFZpZXdDaGlsZChEcm9wem9uZUNvbXBvbmVudCkgY29tcG9uZW50UmVmPzogRHJvcHpvbmVDb21wb25lbnQ7XG4gIEBWaWV3Q2hpbGQoRHJvcHpvbmVEaXJlY3RpdmUpIGRpcmVjdGl2ZVJlZj86IERyb3B6b25lRGlyZWN0aXZlO1xuXG4gIEBPdXRwdXQoKSB1cGxvYWRlZERvYzogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBmaWxlVG9VcGxvYWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBASW5wdXQoKSByZW1vdmVGaWxlOiBhbnk7XG4gIEBJbnB1dCgpIG5vRmlsZVNlbGVjdGVkO1xuICBwdWJsaWMgZGlzYWJsZWQgPSBmYWxzZTtcbiAgcHVibGljIHNob3dQbGFjZWhvbGRlciA9IHRydWU7XG4gIHB1YmxpYyB1cGxvYWRlZEZpbGU6IGFueTtcblxuICBwdWJsaWMgZHJvcFpvbmVjb25maWc6IERyb3B6b25lQ29uZmlnSW50ZXJmYWNlID0ge1xuICAgIGNsaWNrYWJsZTogJy50cmlnZ2VyLXVwbG9hZCcsXG4gICAgbWF4RmlsZXM6IDEsXG4gICAgYXV0b1Jlc2V0OiBudWxsLFxuICAgIGVycm9yUmVzZXQ6IG51bGwsXG4gICAgY2FuY2VsUmVzZXQ6IG51bGwsXG4gICAgdXBsb2FkTXVsdGlwbGU6IGZhbHNlXG4gIH07XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgdGhpcy5nZXRQYXJlbnRDaGFuZ2VzKGNoYW5nZXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBjYWxsZWQgb24gdXBsb2FkIGVycm9yXG4gICAqIEBwYXJhbSBhcmdzXG4gICAqL1xuICBwdWJsaWMgb25VcGxvYWRFcnJvcihhcmdzOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmRpc2FibGVkID0gdHJ1ZTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIG9uIGRyYWctc3RhcnQgZXZlbnRcbiAgICogQHBhcmFtIGV2ZW50XG4gICAqL1xuICBwdWJsaWMgb25GaWxlQWRkZWQoZmlsZSkge1xuICAgIHRoaXMudXBsb2FkZWRGaWxlID0gZmlsZTtcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIHJlYWRlci5vbmxvYWQgPSAoZXZlbnQpID0+IHtcbiAgICAgIC8vIGV2ZW50LnRhcmdldC5yZXN1bHQgY29udGFpbnMgYmFzZTY0IGVuY29kZWQgZmlsZVxuICAgICAgdGhpcy5maWxlVG9VcGxvYWQuZW1pdChyZWFkZXIucmVzdWx0KTtcbiAgICB9O1xuICAgIHRyeSB7XG4gICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcbiAgICB9IGNhdGNoIChlcnJvcikge31cbiAgICB0aGlzLnVwbG9hZGVkRG9jLmVtaXQoZmlsZSk7XG4gICAgdGhpcy5zaG93UGxhY2Vob2xkZXIgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gLSBjYWxsZWQgb24gZmlsZSByZW1vdmVkIGZyb20gZHJhZy1kcm9wIGFyZWFcbiAgICogQGRlc2NyaXB0aW9uIC0gZW1pdHMgbnVsbCB0byB0aGUgcGFyZW50XG4gICAqIEBwYXJhbSBldmVudFxuICAgKi9cbiAgcHVibGljIG9uRmlsZVJlbW92ZWQoZXZlbnQpIHtcbiAgICB0aGlzLmZpbGVUb1VwbG9hZC5lbWl0KG51bGwpO1xuICAgIHRoaXMuc2hvd1BsYWNlaG9sZGVyID0gdHJ1ZTtcbiAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIC0gcmVzZXRzIGRyYWctZHJvcCBhcmVhIG9uIGZvcm0gc3VibWl0IGFuZCBtb2RhbCBjbG9zZSBldmVudHNcbiAgICogQGRlc2NyaXB0aW9uIC0gc2V0cyBzaG93UGxhY2Vob2xkZXIgdmFsdWUgdG8gKHRydWUvZmFsc2UpIHRvIHBvc2l0aW9uIHRoZSBkcm9wIGNvbnRhaW5lclxuICAgKiBAcGFyYW0ge29iamVjdH0gY2hhbmdlcyAtIG9iamVjdCBvZiB0eXBlIFNpbXBsZUNoYW5nZXNcbiAgICovXG4gIHB1YmxpYyBnZXRQYXJlbnRDaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy5yZW1vdmVGaWxlICYmIGNoYW5nZXMucmVtb3ZlRmlsZS5jdXJyZW50VmFsdWUpIHtcbiAgICAgIC8vIGNsZWFyIGRyb3B6b25lXG4gICAgICBpZiAodGhpcy5kaXJlY3RpdmVSZWYpIHtcbiAgICAgICAgdGhpcy5kaXJlY3RpdmVSZWYucmVzZXQoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2hvd1BsYWNlaG9sZGVyID0gdHJ1ZTtcbiAgICB9XG4gICAgLy8gRGlwbGF5IGVycm9yIG1lc3NhZ2UgaWYgYSBmb3JtIGlzIHN1Ym1pdHRlZCB3aXRob3V0IHNlbGVjdGluZyBhIGZpbGVcbiAgICBpZiAoXG4gICAgICBjaGFuZ2VzLm5vRmlsZVNlbGVjdGVkICYmXG4gICAgICBjaGFuZ2VzLm5vRmlsZVNlbGVjdGVkLmN1cnJlbnRWYWx1ZSA9PT0gdHJ1ZVxuICAgICkge1xuICAgICAgdGhpcy5ub0ZpbGVTZWxlY3RlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubm9GaWxlU2VsZWN0ZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==