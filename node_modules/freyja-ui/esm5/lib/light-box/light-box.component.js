import { Component, Input } from '@angular/core';
var LightBoxComponent = /** @class */ (function () {
    function LightBoxComponent() {
        /**
         * checks if the lightbox is open
         */
        this.isOpen = false;
        /**
         * current image slide index
         */
        this.currentSlideIndex = 1;
    }
    LightBoxComponent.prototype.ngOnInit = function () {
    };
    /**
     * opens the lightbox modal and set the current slide
     * slideNumber - the seleceted slide number
     */
    LightBoxComponent.prototype.openModal = function (slideNumber) {
        if (this.slides) {
            this.isOpen = true;
            this.currentSlide(slideNumber);
        }
    };
    /**
     * closes the lightbox modal
     */
    LightBoxComponent.prototype.closeModal = function () {
        this.isOpen = false;
    };
    // Next/previous controls
    LightBoxComponent.prototype.plusSlides = function (n) {
        this.showSlides(this.currentSlideIndex += n);
    };
    // Thumbnail image controls
    LightBoxComponent.prototype.currentSlide = function (n) {
        this.showSlides(this.currentSlideIndex = n);
    };
    /**
     * show the slides in the lightbox modal
     * @param n - slide number
     */
    LightBoxComponent.prototype.showSlides = function (n) {
        if (n > this.slides.length) {
            this.currentSlideIndex = 1;
        }
        else if (n < 1) {
            this.currentSlideIndex = this.slides.length;
        }
        this.slides.forEach(function (slide) {
            slide.hidden = true;
        });
        this.slides[this.currentSlideIndex - 1].hidden = false;
    };
    LightBoxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fj-light-box',
                    template: "<!-- The Modal/Lightbox -->\n<div class=\"lightbox__modal\" [ngClass]=\"{'lightbox__modal__shown': isOpen}\" *ngIf=\"slides\">\n  <span class=\"lightbox__modal__close lightbox__modal__cursor\" (click)=\"closeModal()\">&times;</span>\n  <div class=\"lightbox__modal__content\">\n\n    <div class=\"lightbox__slides\" *ngFor=\"let slide of slides; let i = index\"  [ngClass]=\"{'lightbox__slides__hidden': slide.hidden}\">\n      <div class=\"lightbox__number\">{{i + 1}} / {{slides.length}}</div>\n      <div class=\"lightbox__image\" [ngStyle]=\"{'background-image': 'url(' + slide?.src + ')'}\">\n    </div>\n\n    <!-- Next/previous controls -->\n    <a class=\"lightbox__prev\" (click)=\"plusSlides(-1)\">&#10094;</a>\n    <a class=\"lightbox__next\" (click)=\"plusSlides(1)\">&#10095;</a>\n\n    <!-- Caption text -->\n    <div class=\"lightbox__caption-container\">\n      <p id=\"lightbox__caption\">{{slides[currentSlideIndex - 1]?.alt}}</p>\n    </div>\n\n    <!-- Thumbnail image controls -->\n    <div class=\"lightbox__row\">\n      <div class=\"lightbox__column\" *ngFor=\"let slide of slides; let j = index\">\n        <div class=\"lightbox__thumbnail\" [ngStyle]=\"{'background-image': 'url(' + slide?.src + ')'}\" (click)=\"currentSlide(j + 1)\" [ngClass]=\"{'lightbox__thumbnail__active': !slide.hidden}\">\n      </div>\n    </div>\n  </div>\n</div>\n",
                    styles: ["@font-face{font-family:open-sans;font-weight:400;src:url(/assets/fonts/OpenSans-Regular.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Regular.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Regular.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Regular.svg#open-sans) format(\"svg\")}@font-face{font-family:open-sans;font-weight:600;src:url(/assets/fonts/OpenSans-Bold.eot?) format(\"eot\"),url(/assets/fonts/OpenSans-Bold.woff) format(\"woff\"),url(/assets/fonts/OpenSans-Bold.ttf) format(\"truetype\"),url(/assets/fonts/OpenSans-Bold.svg#open-sans) format(\"svg\")}.lightbox__row{display:flex;background-color:#000}.lightbox__column{width:25%}.lightbox__modal{display:none;position:fixed;z-index:999;padding:3.75rem 0;box-sizing:border-box;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000}.lightbox__modal__shown{display:block}.lightbox__modal__content{position:relative;background-color:#fefefe;margin:auto;padding:0;width:90%;max-width:75rem;height:100vh}.lightbox__modal__close{color:#fff;position:absolute;top:10px;right:25px;font-size:35px;font-weight:700}.lightbox__modal__close:focus,.lightbox__modal__close:hover{color:#999;text-decoration:none;cursor:pointer}.lightbox__slides{display:block;height:100%}.lightbox__slides__hidden{display:none}.lightbox__next,.lightbox__prev{cursor:pointer;position:absolute;top:50%;width:auto;padding:16px;margin-top:-50px;color:#fff;font-weight:700;font-size:20px;transition:.6s;border-radius:0 3px 3px 0;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-select:none}.lightbox__next:hover,.lightbox__prev:hover{background-color:rgba(0,0,0,.8)}.lightbox__next{right:0;border-radius:3px 0 0 3px}.lightbox__number{color:#f2f2f2;font-size:12px;padding:8px 12px;position:absolute;top:0}.lightbox__image{height:100%;width:100%;background-size:cover}.lightbox__caption-container{text-align:center;background-color:#000;padding:2px 16px;color:#fff}.lightbox__thumbnail{opacity:1;cursor:pointer;width:100%;height:9.375rem;background-size:cover}.lightbox__thumbnail:hover,.lightbox__thumbnail__active{opacity:.6}.lightbox__hover-shadow{transition:.3s}.lightbox__hover-shadow:hover{box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}"]
                }] }
    ];
    /** @nocollapse */
    LightBoxComponent.ctorParameters = function () { return []; };
    LightBoxComponent.propDecorators = {
        slides: [{ type: Input }]
    };
    return LightBoxComponent;
}());
export { LightBoxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHQtYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2ZyZXlqYS11aS8iLCJzb3VyY2VzIjpbImxpYi9saWdodC1ib3gvbGlnaHQtYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV6RDtJQXNCRTtRQVZBOztXQUVHO1FBQ0gsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUVmOztXQUVHO1FBQ0gsc0JBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBRU4sQ0FBQztJQUVqQixvQ0FBUSxHQUFSO0lBQ0EsQ0FBQztJQUVEOzs7T0FHRztJQUNILHFDQUFTLEdBQVQsVUFBVSxXQUFtQjtRQUMzQixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsc0NBQVUsR0FBVjtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCx5QkFBeUI7SUFDekIsc0NBQVUsR0FBVixVQUFXLENBQUM7UUFDVixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsMkJBQTJCO0lBQzNCLHdDQUFZLEdBQVosVUFBYSxDQUFDO1FBQ1osSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVEOzs7T0FHRztJQUNILHNDQUFVLEdBQVYsVUFBVyxDQUFDO1FBQ1YsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLENBQUMsQ0FBQztTQUM1QjthQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNoQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7U0FDN0M7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBRSxVQUFBLEtBQUs7WUFDeEIsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3pELENBQUM7O2dCQXRFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLG8yQ0FBeUM7O2lCQUUxQzs7Ozs7eUJBTUUsS0FBSzs7SUE4RFIsd0JBQUM7Q0FBQSxBQXhFRCxJQXdFQztTQW5FWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmotbGlnaHQtYm94JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpZ2h0LWJveC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpZ2h0LWJveC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpZ2h0Qm94Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogaW1hZ2VzIHRoYXQgd2lsbCBiZSBzaG93biBpbiB0aGUgbGlnaHRib3hcbiAgICovXG4gIEBJbnB1dCgpIHNsaWRlcztcblxuICAvKipcbiAgICogY2hlY2tzIGlmIHRoZSBsaWdodGJveCBpcyBvcGVuXG4gICAqL1xuICBpc09wZW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogY3VycmVudCBpbWFnZSBzbGlkZSBpbmRleFxuICAgKi9cbiAgY3VycmVudFNsaWRlSW5kZXggPSAxO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICAvKipcbiAgICogb3BlbnMgdGhlIGxpZ2h0Ym94IG1vZGFsIGFuZCBzZXQgdGhlIGN1cnJlbnQgc2xpZGVcbiAgICogc2xpZGVOdW1iZXIgLSB0aGUgc2VsZWNldGVkIHNsaWRlIG51bWJlclxuICAgKi9cbiAgb3Blbk1vZGFsKHNsaWRlTnVtYmVyOiBudW1iZXIpIHtcbiAgICBpZiAodGhpcy5zbGlkZXMpIHtcbiAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgICAgIHRoaXMuY3VycmVudFNsaWRlKHNsaWRlTnVtYmVyKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogY2xvc2VzIHRoZSBsaWdodGJveCBtb2RhbFxuICAgKi9cbiAgY2xvc2VNb2RhbCgpIHtcbiAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xuICB9XG5cbiAgLy8gTmV4dC9wcmV2aW91cyBjb250cm9sc1xuICBwbHVzU2xpZGVzKG4pIHtcbiAgICB0aGlzLnNob3dTbGlkZXModGhpcy5jdXJyZW50U2xpZGVJbmRleCArPSBuKTtcbiAgfVxuXG4gIC8vIFRodW1ibmFpbCBpbWFnZSBjb250cm9sc1xuICBjdXJyZW50U2xpZGUobikge1xuICAgIHRoaXMuc2hvd1NsaWRlcyh0aGlzLmN1cnJlbnRTbGlkZUluZGV4ID0gbik7XG4gIH1cblxuICAvKipcbiAgICogc2hvdyB0aGUgc2xpZGVzIGluIHRoZSBsaWdodGJveCBtb2RhbFxuICAgKiBAcGFyYW0gbiAtIHNsaWRlIG51bWJlclxuICAgKi9cbiAgc2hvd1NsaWRlcyhuKSB7XG4gICAgaWYgKG4gPiB0aGlzLnNsaWRlcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY3VycmVudFNsaWRlSW5kZXggPSAxO1xuICAgIH0gZWxzZSBpZiAobiA8IDEpIHtcbiAgICAgIHRoaXMuY3VycmVudFNsaWRlSW5kZXggPSB0aGlzLnNsaWRlcy5sZW5ndGg7XG4gICAgfVxuXG4gICAgdGhpcy5zbGlkZXMuZm9yRWFjaCggc2xpZGUgPT4ge1xuICAgICAgc2xpZGUuaGlkZGVuID0gdHJ1ZTtcbiAgICB9KTtcbiAgICB0aGlzLnNsaWRlc1t0aGlzLmN1cnJlbnRTbGlkZUluZGV4IC0gMV0uaGlkZGVuID0gZmFsc2U7XG4gIH1cblxufVxuIl19