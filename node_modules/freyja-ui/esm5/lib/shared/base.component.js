// Angular Imports
import { Input } from '@angular/core';
/**
 * @description Common set of inputs and methods to be used in all Freyja Components
 */
var BaseComponent = /** @class */ (function () {
    function BaseComponent() {
        this._disabled = false;
        /**
         * If component will take full width of it's container
         */
        this.fullWidth = false;
        /**
         * label position, if it will appear before or after content
         */
        this.labelPosition = 'after';
        /**
       * Size can be micro, small, medium or large
       */
        this.size = 'medium';
        /**
         * Placeholder for HTML input elements
         */
        this.placeholder = '';
        /**
         * if component value is required in a form
         */
        this.required = false;
    }
    Object.defineProperty(BaseComponent.prototype, "disabled", {
        /**
         * If component will be disabled, setter/getter to support approach like below
         * <fj-comp disabled></fj-comp>
         */
        get: function () {
            return this._disabled;
        },
        set: function (v) {
            this._disabled = this.coerceBooleanInput(v);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @description coerce an inout value into boolean
     * @param val an input value which will be coearced into a boolean value
     */
    BaseComponent.prototype.coerceBooleanInput = function (val) {
        return !!val || val === '';
    };
    BaseComponent.propDecorators = {
        customStyles: [{ type: Input }],
        name: [{ type: Input }],
        margin: [{ type: Input }],
        disabled: [{ type: Input }],
        fullWidth: [{ type: Input }],
        label: [{ type: Input }],
        labelPosition: [{ type: Input }],
        size: [{ type: Input }],
        placeholder: [{ type: Input }],
        required: [{ type: Input }],
        tabIndex: [{ type: Input }],
        ariaLabel: [{ type: Input, args: ['aria-label',] }],
        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],
        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }]
    };
    return BaseComponent;
}());
export { BaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mcmV5amEtdWkvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL2Jhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQjtBQUNsQixPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDOztHQUVHO0FBQ0g7SUFBQTtRQUNTLGNBQVMsR0FBRyxLQUFLLENBQUM7UUEwQnpCOztXQUVHO1FBQ00sY0FBUyxHQUFHLEtBQUssQ0FBQztRQU8zQjs7V0FFRztRQUNNLGtCQUFhLEdBQXVCLE9BQU8sQ0FBQztRQUVuRDs7U0FFQztRQUNNLFNBQUksR0FBMkMsUUFBUSxDQUFDO1FBRWpFOztXQUVHO1FBQ00sZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFFMUI7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO0lBbUM1QixDQUFDO0lBdEVDLHNCQUNJLG1DQUFRO1FBTFo7OztXQUdHO2FBQ0g7WUFFRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzthQUNELFVBQWEsQ0FBVTtZQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QyxDQUFDOzs7T0FIQTtJQTRERDs7O09BR0c7SUFDSCwwQ0FBa0IsR0FBbEIsVUFBbUIsR0FBUTtRQUN6QixPQUFPLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxLQUFLLEVBQUUsQ0FBQztJQUM3QixDQUFDOzsrQkFuRkEsS0FBSzt1QkFJTCxLQUFLO3lCQUtMLEtBQUs7MkJBS0wsS0FBSzs0QkFVTCxLQUFLO3dCQUtMLEtBQUs7Z0NBS0wsS0FBSzt1QkFLTCxLQUFLOzhCQUtMLEtBQUs7MkJBS0wsS0FBSzsyQkFLTCxLQUFLOzRCQUtMLEtBQUssU0FBQyxZQUFZO2lDQU1sQixLQUFLLFNBQUMsaUJBQWlCO2tDQUt2QixLQUFLLFNBQUMsa0JBQWtCOztJQWMzQixvQkFBQztDQUFBLEFBMUZELElBMEZDO1NBMUZZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbmd1bGFyIEltcG9ydHNcbmltcG9ydCB7IElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uIENvbW1vbiBzZXQgb2YgaW5wdXRzIGFuZCBtZXRob2RzIHRvIGJlIHVzZWQgaW4gYWxsIEZyZXlqYSBDb21wb25lbnRzXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlQ29tcG9uZW50IHtcbiAgcHVibGljIF9kaXNhYmxlZCA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBjdXN0b20gc3R5bGVzIG9iamVjdCBmb3IgdGhlIGJ1dHRvblxuICAgKi9cbiAgQElucHV0KCkgY3VzdG9tU3R5bGVzO1xuICAvKipcbiAgICogTmFtZSBpbnB1dCwgY29tbW9ubHkgdXNlZCB0byBpZGVudGlmeSBmb3JtIHZhbHVlXG4gICAqL1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBNYXJnaW4gZm9yIGNvbXBvbmVudFxuICAgKi9cbiAgQElucHV0KCkgbWFyZ2luOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJZiBjb21wb25lbnQgd2lsbCBiZSBkaXNhYmxlZCwgc2V0dGVyL2dldHRlciB0byBzdXBwb3J0IGFwcHJvYWNoIGxpa2UgYmVsb3dcbiAgICogPGZqLWNvbXAgZGlzYWJsZWQ+PC9mai1jb21wPlxuICAgKi9cbiAgQElucHV0KClcbiAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuICBzZXQgZGlzYWJsZWQodjogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gdGhpcy5jb2VyY2VCb29sZWFuSW5wdXQodik7XG4gIH1cbiAgLyoqXG4gICAqIElmIGNvbXBvbmVudCB3aWxsIHRha2UgZnVsbCB3aWR0aCBvZiBpdCdzIGNvbnRhaW5lclxuICAgKi9cbiAgQElucHV0KCkgZnVsbFdpZHRoID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIGxhYmVsIHRvIGJlIHVzZWQgaW4gdGV4dCBpbnB1dCBldGNcbiAgICovXG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGxhYmVsIHBvc2l0aW9uLCBpZiBpdCB3aWxsIGFwcGVhciBiZWZvcmUgb3IgYWZ0ZXIgY29udGVudFxuICAgKi9cbiAgQElucHV0KCkgbGFiZWxQb3NpdGlvbjogJ2JlZm9yZScgfCAnYWZ0ZXInID0gJ2FmdGVyJztcblxuICAgIC8qKlxuICAgKiBTaXplIGNhbiBiZSBtaWNybywgc21hbGwsIG1lZGl1bSBvciBsYXJnZVxuICAgKi9cbiAgQElucHV0KCkgc2l6ZTogJ21pY3JvJyB8ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdsYXJnZScgPSAnbWVkaXVtJztcblxuICAvKipcbiAgICogUGxhY2Vob2xkZXIgZm9yIEhUTUwgaW5wdXQgZWxlbWVudHNcbiAgICovXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyID0gJyc7XG5cbiAgLyoqXG4gICAqIGlmIGNvbXBvbmVudCB2YWx1ZSBpcyByZXF1aXJlZCBpbiBhIGZvcm1cbiAgICovXG4gIEBJbnB1dCgpIHJlcXVpcmVkID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIFRhYkluZGV4IG9mIHRoZSBjb21wb25lbnRcbiAgICovXG4gIEBJbnB1dCgpIHRhYkluZGV4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIGFyaWEtbGFiZWwgYXR0cmlidXRlIG9mIHRoZSBob3N0IGVsZW1lbnRcbiAgICovXG4gIEBJbnB1dCgnYXJpYS1sYWJlbCcpIGFyaWFMYWJlbDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBhcmlhLWxhYmVsbGVkYnkgYXR0cmlidXRlIGZvciBlbGVtZW50LCB1c3VhbGx5IHVzZWQgaW4gaW5wdXQgZWxlbWVudFxuICAgKi9cblxuICBASW5wdXQoJ2FyaWEtbGFiZWxsZWRieScpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIElucHV0IGF0dHJpYnV0ZSBmb3IgQWNjZXNzaWJpbGl0eVxuICAgKi9cbiAgQElucHV0KCdhcmlhLWRlc2NyaWJlZGJ5JykgYXJpYURlc2NyaWJlZGJ5OiBzdHJpbmc7XG5cblxuXG4gIHB1YmxpYyBzdHlsZTogb2JqZWN0IHwgc3RyaW5nO1xuICBwdWJsaWMgY2xhc3M6IHN0cmluZztcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIGNvZXJjZSBhbiBpbm91dCB2YWx1ZSBpbnRvIGJvb2xlYW5cbiAgICogQHBhcmFtIHZhbCBhbiBpbnB1dCB2YWx1ZSB3aGljaCB3aWxsIGJlIGNvZWFyY2VkIGludG8gYSBib29sZWFuIHZhbHVlXG4gICAqL1xuICBjb2VyY2VCb29sZWFuSW5wdXQodmFsOiBhbnkpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISF2YWwgfHwgdmFsID09PSAnJztcbiAgfVxufVxuIl19